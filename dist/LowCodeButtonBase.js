/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
var LCB;
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/Exceptions/ButtonException.ts":
/*!*******************************************!*\
  !*** ./src/Exceptions/ButtonException.ts ***!
  \*******************************************/
/***/ (function(__unused_webpack_module, exports) {

eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === \"function\" ? Iterator : Object).prototype);\n    return g.next = verb(0), g[\"throw\"] = verb(1), g[\"return\"] = verb(2), typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ExceptionLowCodeButton = void 0;\nvar ExceptionLowCodeButton = /** @class */ (function () {\n    function ExceptionLowCodeButton() {\n    }\n    ExceptionLowCodeButton.buttonSettingNotFound = function (buttonSettingName) {\n        return __awaiter(this, void 0, void 0, function () {\n            var errorStrings;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        errorStrings = {\n                            text: \"Button setting not found: \".concat(buttonSettingName),\n                            title: \"Button Setting Not Found\",\n                        };\n                        return [4 /*yield*/, Xrm.Navigation.openAlertDialog(errorStrings)];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    ExceptionLowCodeButton.buttonAdvancedSettingNotFound = function (lcid) {\n        return __awaiter(this, void 0, void 0, function () {\n            var errorStrings;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        errorStrings = {\n                            text: \"Button advanced setting not found for the LCID \".concat(lcid),\n                            title: \"Button Advanced Setting Not Found\",\n                        };\n                        return [4 /*yield*/, Xrm.Navigation.openAlertDialog(errorStrings)];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    ExceptionLowCodeButton.showFormNotificationGenericError = function (title, text) {\n        return __awaiter(this, void 0, void 0, function () {\n            var errorStrings;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        errorStrings = {\n                            text: text,\n                            title: title,\n                        };\n                        return [4 /*yield*/, Xrm.Navigation.openAlertDialog(errorStrings)];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    return ExceptionLowCodeButton;\n}());\nexports.ExceptionLowCodeButton = ExceptionLowCodeButton;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/Exceptions/ButtonException.ts\n");

/***/ }),

/***/ "./src/Helpers/BaseHelper.ts":
/*!***********************************!*\
  !*** ./src/Helpers/BaseHelper.ts ***!
  \***********************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === \"function\" ? Iterator : Object).prototype);\n    return g.next = verb(0), g[\"throw\"] = verb(1), g[\"return\"] = verb(2), typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.BaseHelper = void 0;\nvar ButtonException_1 = __webpack_require__(/*! ../Exceptions/ButtonException */ \"./src/Exceptions/ButtonException.ts\");\n/**\n * BaseHelper provides core functionality for determining context type and retrieving\n * configuration objects (button setting and advanced setting) using fetch XML queries.\n */\nvar BaseHelper = /** @class */ (function () {\n    function BaseHelper() {\n    }\n    /**\n     * Determines the button location based on the provided context.\n     * - If the context is a FormContext, sets containerType to \"form\" and stores it.\n     * - If the context is a GridControl, sets containerType to \"grid\" or \"subgrid\"\n     *   depending on whether getParent() returns a non-null value.\n     *\n     * @param context - Either a FormContext or a GridControl.\n     */\n    BaseHelper.prototype.getButtonLocation = function (context) {\n        if (context) {\n            if (typeof context.data === \"object\") {\n                this.formContext = context;\n                this.containerType = \"form\";\n            }\n            else if (typeof context.getGrid === \"function\") {\n                this.gridControl = context;\n                if (typeof this.gridControl.getParent === \"function\" && this.gridControl.getParent() !== null) {\n                    this.containerType = \"subgrid\";\n                }\n                else {\n                    this.containerType = \"grid\";\n                }\n            }\n        }\n    };\n    /**\n     * Retrieves the current user's language code from the global context.\n     *\n     * @returns The language code.\n     */\n    BaseHelper.prototype.getLanguageCode = function () {\n        return Xrm.Utility.getGlobalContext().userSettings.languageId;\n    };\n    /**\n     * Retrieves the current user's ID as a lowercase string with curly braces removed.\n     *\n     * @returns The user ID.\n     */\n    BaseHelper.prototype.getUserID = function () {\n        return Xrm.Utility.getGlobalContext().userSettings.userId.replace(\"{\", \"\").replace(\"}\", \"\").toLowerCase();\n    };\n    /**\n     * Makes an HTTP request using fetch with pre-configured headers.\n     *\n     * @param method - The HTTP method (e.g., \"GET\", \"POST\").\n     * @param url - The URL to send the request to.\n     * @param body - Optional request body.\n     * @returns A Promise that resolves to the Response.\n     */\n    BaseHelper.prototype.makeRequest = function (method, url, body) {\n        return __awaiter(this, void 0, void 0, function () {\n            var headers, options;\n            return __generator(this, function (_a) {\n                headers = {\n                    \"Content-Type\": \"application/json\",\n                    \"OData-MaxVersion\": \"4.0\",\n                    \"OData-Version\": \"4.0\",\n                    Accept: \"application/json\",\n                    Prefer: \"odata.include-annotations=*\",\n                };\n                options = {\n                    method: method,\n                    headers: headers,\n                    body: body ? JSON.stringify(body) : undefined,\n                };\n                return [2 /*return*/, fetch(url, options)];\n            });\n        });\n    };\n    /**\n     * Retrieves the button setting record using the provided button setting name.\n     *\n     * @param buttonSettingName - The name of the button setting to retrieve.\n     * @returns A Promise that resolves to the esp_ButtonSetting or null.\n     * @throws An error if the fetch fails.\n     */\n    BaseHelper.prototype.getButtonSetting = function (buttonSettingName) {\n        return __awaiter(this, void 0, void 0, function () {\n            var fetchXml, query, url, response, data, setting, _a;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        fetchXml = \"\\n      <fetch top=\\\"1\\\">\\n        <entity name=\\\"esp_buttonsetting\\\">\\n          <attribute name=\\\"esp_buttonsettingid\\\" />\\n          <attribute name=\\\"esp_endpoint\\\" />\\n          <attribute name=\\\"esp_includecallinguseridinpayload\\\" />\\n          <attribute name=\\\"esp_includeentitylogicalnameinpayload\\\" />\\n          <attribute name=\\\"esp_includerecordidinpayload\\\" />\\n          <attribute name=\\\"esp_buttonname\\\" />\\n          <attribute name=\\\"esp_savebeforerunning\\\" />\\n          <attribute name=\\\"esp_refreshformwhenapicallends\\\" />\\n          <filter type=\\\"and\\\">\\n            <condition attribute=\\\"esp_buttonname\\\" operator=\\\"eq\\\" value=\\\"\".concat(buttonSettingName, \"\\\" />\\n          </filter>\\n        </entity>\\n      </fetch>\\n    \");\n                        query = \"?fetchXml=\".concat(encodeURIComponent(fetchXml));\n                        url = \"\".concat(Xrm.Utility.getGlobalContext().getClientUrl(), \"/api/data/v9.1/esp_buttonsettings\").concat(query);\n                        _b.label = 1;\n                    case 1:\n                        _b.trys.push([1, 4, , 5]);\n                        return [4 /*yield*/, this.makeRequest(\"GET\", url)];\n                    case 2:\n                        response = _b.sent();\n                        return [4 /*yield*/, response.json()];\n                    case 3:\n                        data = _b.sent();\n                        setting = data.value[0];\n                        this.buttonSetting = setting;\n                        return [2 /*return*/, setting];\n                    case 4:\n                        _a = _b.sent();\n                        ButtonException_1.ExceptionLowCodeButton.buttonSettingNotFound(buttonSettingName);\n                        return [2 /*return*/, null];\n                    case 5: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Retrieves the advanced button setting record using the main button setting ID and language code.\n     *\n     * @param mainButtonSettingId - The ID of the main button setting.\n     * @param lcid - The language code.\n     * @returns A Promise that resolves to the esp_ButtonAdvancedSetting or null.\n     * @throws An error if the fetch fails.\n     */\n    BaseHelper.prototype.getButtonAdvancedSetting = function (mainButtonSettingId, lcid) {\n        return __awaiter(this, void 0, void 0, function () {\n            var fetchXml, query, url, response, data, advancedSetting, _a;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        fetchXml = \"\\n      <fetch top=\\\"1\\\">\\n        <entity name=\\\"esp_buttonadvancedsetting\\\">\\n          <attribute name=\\\"esp_asyncformnotification\\\" />\\n          <attribute name=\\\"esp_asyncformnotificationtext\\\" />\\n          <attribute name=\\\"esp_buttonadvancedsettingid\\\" />\\n          <attribute name=\\\"esp_confirmationdialogcancellabel\\\" />\\n          <attribute name=\\\"esp_confirmationdialogconfirmlabel\\\" />\\n          <attribute name=\\\"esp_confirmationdialogsubtitle\\\" />\\n          <attribute name=\\\"esp_confirmationdialogtext\\\" />\\n          <attribute name=\\\"esp_confirmationdialogtitle\\\" />\\n          <attribute name=\\\"esp_executionmode\\\" />\\n          <attribute name=\\\"esp_mainbuttonsetting\\\" />\\n          <attribute name=\\\"esp_settingid\\\" />\\n          <attribute name=\\\"esp_settinglanguage\\\" />\\n          <attribute name=\\\"esp_showconfirmationdialog\\\" />\\n          <attribute name=\\\"esp_syncconfirmationbox\\\" />\\n          <attribute name=\\\"esp_syncconfirmationboxconfirmlabel\\\" />\\n          <attribute name=\\\"esp_syncconfirmationboxredirect\\\" />\\n          <attribute name=\\\"esp_syncconfirmationboxredirectcancellabel\\\" />\\n          <attribute name=\\\"esp_syncconfirmationboxredirectconfirmlabel\\\" />\\n          <attribute name=\\\"esp_syncconfirmationboxredirectmode\\\" />\\n          <attribute name=\\\"esp_syncconfirmationboxredirectsubtitle\\\" />\\n          <attribute name=\\\"esp_syncconfirmationboxredirecttext\\\" />\\n          <attribute name=\\\"esp_syncconfirmationboxredirecttitle\\\" />\\n          <attribute name=\\\"esp_syncconfirmationboxtext\\\" />\\n          <attribute name=\\\"esp_syncconfirmationboxtitle\\\" />\\n          <attribute name=\\\"esp_syncformnotification\\\" />\\n          <attribute name=\\\"esp_syncformnotificationtext\\\" />\\n          <attribute name=\\\"esp_syncrefreshform\\\" />\\n          <attribute name=\\\"esp_syncspinner\\\" />\\n          <attribute name=\\\"esp_syncspinnertext\\\" />\\n          <attribute name=\\\"esp_syncsuccessformnotification\\\" />\\n          <attribute name=\\\"esp_syncsuccessformnotificationtext\\\" />\\n          <filter>\\n            <condition attribute=\\\"esp_mainbuttonsetting\\\" operator=\\\"eq\\\" value=\\\"\".concat(mainButtonSettingId, \"\\\" />\\n          </filter>\\n          <link-entity name=\\\"esp_language\\\" from=\\\"esp_languageid\\\" to=\\\"esp_settinglanguage\\\" link-type=\\\"inner\\\">\\n            <filter>\\n              <condition attribute=\\\"esp_lcid\\\" operator=\\\"eq\\\" value=\\\"\").concat(lcid, \"\\\" />\\n            </filter>\\n          </link-entity>\\n        </entity>\\n      </fetch>\\n    \");\n                        query = \"?fetchXml=\".concat(encodeURIComponent(fetchXml));\n                        url = \"\".concat(Xrm.Utility.getGlobalContext().getClientUrl(), \"/api/data/v9.1/esp_buttonadvancedsettings\").concat(query);\n                        _b.label = 1;\n                    case 1:\n                        _b.trys.push([1, 4, , 5]);\n                        return [4 /*yield*/, this.makeRequest(\"GET\", url)];\n                    case 2:\n                        response = _b.sent();\n                        return [4 /*yield*/, response.json()];\n                    case 3:\n                        data = _b.sent();\n                        advancedSetting = data.value[0];\n                        this.buttonAdvancedSetting = advancedSetting;\n                        return [2 /*return*/, advancedSetting];\n                    case 4:\n                        _a = _b.sent();\n                        ButtonException_1.ExceptionLowCodeButton.buttonAdvancedSettingNotFound(lcid);\n                        return [2 /*return*/, null];\n                    case 5: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Initializes settings by retrieving the button setting (using its name) and then the advanced button setting.\n     *\n     * @param buttonSettingName - The name of the button setting to retrieve.\n     */\n    BaseHelper.prototype.initializeSettings = function (buttonSettingName) {\n        return __awaiter(this, void 0, void 0, function () {\n            var setting;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.getButtonSetting(buttonSettingName)];\n                    case 1:\n                        setting = _a.sent();\n                        if (!setting) return [3 /*break*/, 3];\n                        return [4 /*yield*/, this.getButtonAdvancedSetting(setting.esp_buttonsettingid, this.getLanguageCode())];\n                    case 2:\n                        _a.sent();\n                        _a.label = 3;\n                    case 3: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    return BaseHelper;\n}());\nexports.BaseHelper = BaseHelper;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/Helpers/BaseHelper.ts\n");

/***/ }),

/***/ "./src/Helpers/ButtonFormHelper.ts":
/*!*****************************************!*\
  !*** ./src/Helpers/ButtonFormHelper.ts ***!
  \*****************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === \"function\" ? Iterator : Object).prototype);\n    return g.next = verb(0), g[\"throw\"] = verb(1), g[\"return\"] = verb(2), typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ButtonFormHelper = void 0;\nvar ButtonException_1 = __webpack_require__(/*! ../Exceptions/ButtonException */ \"./src/Exceptions/ButtonException.ts\");\nvar BaseHelper_1 = __webpack_require__(/*! ./BaseHelper */ \"./src/Helpers/BaseHelper.ts\"); // Adjust path as needed\n/**\n * ButtonFormHelper extends BaseHelper to provide form-specific functionality.\n * It accepts only a Xrm.FormContext as the context.\n */\nvar ButtonFormHelper = /** @class */ (function (_super) {\n    __extends(ButtonFormHelper, _super);\n    /**\n     * Constructs a new ButtonFormHelper instance with the provided FormContext.\n     *\n     * @param formContext - The Xrm.FormContext representing the current form.\n     */\n    function ButtonFormHelper(formContext) {\n        var _this = _super.call(this) || this;\n        // Set the context and container type using the BaseHelper's method.\n        _this.getButtonLocation(formContext);\n        return _this;\n    }\n    /**\n     * Static factory method to create and initialize a ButtonFormHelper instance.\n     *\n     * @param formContext - The Xrm.FormContext representing the current form.\n     * @param buttonSettingName - The name of the button setting to retrieve.\n     * @returns A Promise that resolves to an initialized ButtonFormHelper instance.\n     */\n    ButtonFormHelper.create = function (formContext, buttonSettingName) {\n        return __awaiter(this, void 0, void 0, function () {\n            var helper;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        helper = new ButtonFormHelper(formContext);\n                        return [4 /*yield*/, helper.initializeSettings(buttonSettingName)];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/, helper];\n                }\n            });\n        });\n    };\n    /**\n     * Retrieves the entity logical name from the current form context.\n     *\n     * @returns The entity logical name.\n     * @throws Error if the form context is not set.\n     */\n    ButtonFormHelper.prototype.getEntityLogicalName = function () {\n        if (!this.formContext) {\n            throw new Error(\"Form context is not set.\");\n        }\n        return this.formContext.data.entity.getEntityName();\n    };\n    /**\n     * Retrieves the record ID from the current form context.\n     *\n     * @returns The record ID as a lowercase string without curly braces.\n     * @throws Error if the form context is not set.\n     */\n    ButtonFormHelper.prototype.getRecordId = function () {\n        if (!this.formContext) {\n            throw new Error(\"Form context is not set.\");\n        }\n        return this.formContext.data.entity.getId().replace(\"{\", \"\").replace(\"}\", \"\").toLowerCase();\n    };\n    /**\n     * Builds a payload based on the button setting configuration and form context.\n     *\n     * The payload may include the entity logical name, record ID, and user ID,\n     * according to the configuration flags in the button setting.\n     *\n     * @returns An object containing the payload data.\n     * @throws Error if the form context or button setting is not set.\n     */\n    ButtonFormHelper.prototype.getPayload = function () {\n        if (!this.formContext || !this.buttonSetting) {\n            throw new Error(\"Form context or button setting is not set.\");\n        }\n        var payload = {};\n        if (this.buttonSetting.esp_includeentitylogicalnameinpayload) {\n            payload = __assign(__assign({}, payload), { entityLogicalName: this.getEntityLogicalName() });\n        }\n        if (this.buttonSetting.esp_includerecordidinpayload) {\n            payload = __assign(__assign({}, payload), { recordId: this.getRecordId() });\n        }\n        if (this.buttonSetting.esp_includecallinguseridinpayload) {\n            payload = __assign(__assign({}, payload), { userId: this.getUserID() });\n        }\n        return payload;\n    };\n    /**\n     * Opens a confirmation dialog before executing the button action.\n     *\n     * @returns A Promise that resolves to true if the user confirms the dialog, false otherwise.\n     */\n    ButtonFormHelper.prototype.openConfirmationDialogBeforeRun = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var confirmStrings, result;\n            var _a, _b, _c, _d;\n            return __generator(this, function (_e) {\n                switch (_e.label) {\n                    case 0:\n                        if (!(!this.buttonAdvancedSetting || this.buttonAdvancedSetting.esp_confirmationdialogtext == null)) return [3 /*break*/, 2];\n                        return [4 /*yield*/, ButtonException_1.ExceptionLowCodeButton.showFormNotificationGenericError(\"Confirmation Dialog Text Error\", \"The confirmation dialog text is empty! Please fill it on your configuration settings.\")];\n                    case 1:\n                        _e.sent();\n                        return [2 /*return*/, false];\n                    case 2:\n                        confirmStrings = {\n                            cancelButtonLabel: (_a = this.buttonAdvancedSetting.esp_confirmationdialogcancellabel) !== null && _a !== void 0 ? _a : \"\",\n                            confirmButtonLabel: (_b = this.buttonAdvancedSetting.esp_confirmationdialogconfirmlabel) !== null && _b !== void 0 ? _b : \"\",\n                            subtitle: (_c = this.buttonAdvancedSetting.esp_confirmationdialogsubtitle) !== null && _c !== void 0 ? _c : \"\",\n                            text: (_d = this.buttonAdvancedSetting.esp_confirmationdialogtext) !== null && _d !== void 0 ? _d : \"\",\n                            title: this.buttonAdvancedSetting.esp_confirmationdialogtitle,\n                        };\n                        return [4 /*yield*/, Xrm.Navigation.openConfirmDialog(confirmStrings)];\n                    case 3:\n                        result = _e.sent();\n                        return [2 /*return*/, result.confirmed];\n                }\n            });\n        });\n    };\n    /**\n     * Opens a synchronous success dialog and awaits the user's confirmation.\n     *\n     * @returns A Promise that resolves to true if the success dialog is confirmed, or false otherwise.\n     */\n    ButtonFormHelper.prototype.openSuccessDialogSync = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var confirmStrings, result;\n            var _a, _b;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        if (!(!this.buttonAdvancedSetting || this.buttonAdvancedSetting.esp_syncconfirmationboxtext == null)) return [3 /*break*/, 2];\n                        return [4 /*yield*/, ButtonException_1.ExceptionLowCodeButton.showFormNotificationGenericError(\"Sync Confirmation Box Text Error\", \"The sync confirmation box text is empty! Please fill it on your configuration settings.\")];\n                    case 1:\n                        _c.sent();\n                        return [2 /*return*/, false];\n                    case 2:\n                        confirmStrings = {\n                            confirmButtonLabel: (_a = this.buttonAdvancedSetting.esp_syncconfirmationboxconfirmlabel) !== null && _a !== void 0 ? _a : undefined,\n                            text: (_b = this.buttonAdvancedSetting.esp_syncconfirmationboxtext) !== null && _b !== void 0 ? _b : undefined,\n                            title: this.buttonAdvancedSetting.esp_syncconfirmationboxtitle,\n                        };\n                        return [4 /*yield*/, Xrm.Navigation.openAlertDialog(confirmStrings)];\n                    case 3:\n                        result = _c.sent();\n                        return [2 /*return*/, result.confirmed];\n                }\n            });\n        });\n    };\n    /**\n     * Opens a success dialog that may redirect the user based on their confirmation.\n     * If the user confirms, the browser is redirected; otherwise, the form is reloaded.\n     *\n     * @param response - An object containing the redirect URI.\n     */\n    ButtonFormHelper.prototype.openSuccessDialogRedirect = function (response) {\n        var _this = this;\n        var _a, _b, _c, _d;\n        if (!this.buttonAdvancedSetting) {\n            throw new Error(\"Button advanced setting is not set.\");\n        }\n        if (this.buttonAdvancedSetting.esp_syncconfirmationboxredirecttext == null) {\n            ButtonException_1.ExceptionLowCodeButton.showFormNotificationGenericError(\"Sync Confirmation Box Redirect Text Error\", \"The sync confirmation box redirect text is empty! Please fill it on your configuration settings.\");\n            return;\n        }\n        var confirmStrings = {\n            cancelButtonLabel: (_a = this.buttonAdvancedSetting.esp_syncconfirmationboxredirectcancellabel) !== null && _a !== void 0 ? _a : undefined,\n            confirmButtonLabel: (_b = this.buttonAdvancedSetting.esp_syncconfirmationboxredirectconfirmlabel) !== null && _b !== void 0 ? _b : undefined,\n            text: this.buttonAdvancedSetting.esp_syncconfirmationboxredirecttext,\n            subtitle: (_c = this.buttonAdvancedSetting.esp_syncconfirmationboxredirectsubtitle) !== null && _c !== void 0 ? _c : undefined,\n            title: (_d = this.buttonAdvancedSetting.esp_syncconfirmationboxredirecttitle) !== null && _d !== void 0 ? _d : undefined,\n        };\n        Xrm.Navigation.openConfirmDialog(confirmStrings).then(function (result) {\n            if (result.confirmed) {\n                console.log(\"User confirmed the dialog, redirecting...\");\n                if (_this.buttonAdvancedSetting.esp_syncconfirmationboxredirectmode ===\n                    1 /* esp_buttonadvancedsetting_esp_buttonadvancedsetting_esp_syncconfirmationboxredirectmode.CurrentTab */) {\n                    window.open(response.redirectUri, \"_self\").focus();\n                }\n                else {\n                    window.open(response.redirectUri, \"_blank\").focus();\n                }\n            }\n            else {\n                console.log(\"User cancelled the dialog, refreshing the form.\");\n                _this.reloadForm();\n            }\n        });\n    };\n    /**\n     * Reloads the current form.\n     *\n     * @throws Error if the form context, button setting, or advanced setting is not set.\n     */\n    ButtonFormHelper.prototype.reloadForm = function () {\n        if (!this.formContext || !this.buttonSetting || !this.buttonAdvancedSetting) {\n            throw new Error(\"Required properties are not set for reloading the form.\");\n        }\n        if (this.buttonSetting.esp_refreshformwhenapicallends &&\n            !(this.buttonAdvancedSetting.esp_syncconfirmationboxredirect &&\n                this.buttonAdvancedSetting.esp_syncconfirmationboxredirectmode ===\n                    1 /* esp_buttonadvancedsetting_esp_buttonadvancedsetting_esp_syncconfirmationboxredirectmode.CurrentTab */)) {\n            this.formContext.data.refresh(false);\n        }\n    };\n    /**\n     * Displays an asynchronous form notification for 5 seconds.\n     *\n     * @returns A Promise that resolves when the notification is cleared.\n     */\n    ButtonFormHelper.prototype.asyncFormNotification = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!(!this.formContext ||\n                            !this.buttonAdvancedSetting ||\n                            this.buttonAdvancedSetting.esp_asyncformnotificationtext == null)) return [3 /*break*/, 2];\n                        return [4 /*yield*/, ButtonException_1.ExceptionLowCodeButton.showFormNotificationGenericError(\"Async Form Notification Text Error\", \"The async form notification text is empty! Please fill it on your configuration settings.\")];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                    case 2:\n                        this.formContext.ui.setFormNotification(this.buttonAdvancedSetting.esp_asyncformnotificationtext, \"INFO\", \"LowCodeButtonFormNotification\");\n                        setTimeout(function () {\n                            _this.formContext.ui.clearFormNotification(\"LowCodeButtonFormNotification\");\n                        }, 5000);\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Clears the form notification from the current form.\n     *\n     * @throws Error if the form context is not set.\n     */\n    ButtonFormHelper.prototype.clearFormNotification = function () {\n        if (!this.formContext) {\n            throw new Error(\"Form context is not set.\");\n        }\n        this.formContext.ui.clearFormNotification(\"LowCodeButtonFormNotification\");\n    };\n    /**\n     * Displays a synchronous form notification for 120 seconds.\n     *\n     * @returns A Promise that resolves when the notification is cleared.\n     */\n    ButtonFormHelper.prototype.syncFormNotification = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!(!this.formContext ||\n                            !this.buttonAdvancedSetting ||\n                            this.buttonAdvancedSetting.esp_syncformnotificationtext == null)) return [3 /*break*/, 2];\n                        return [4 /*yield*/, ButtonException_1.ExceptionLowCodeButton.showFormNotificationGenericError(\"Sync Form Notification Text Error\", \"The sync form notification text is empty! Please fill it on your configuration settings.\")];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                    case 2:\n                        this.formContext.ui.setFormNotification(this.buttonAdvancedSetting.esp_syncformnotificationtext, \"INFO\", \"LowCodeButtonFormNotification\");\n                        setTimeout(function () {\n                            _this.formContext.ui.clearFormNotification(\"LowCodeButtonFormNotification\");\n                        }, 120000);\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Displays a success form notification for 5 seconds.\n     *\n     * @returns A Promise that resolves when the notification is cleared.\n     */\n    ButtonFormHelper.prototype.showSuccessFormNotification = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!(!this.formContext ||\n                            !this.buttonAdvancedSetting ||\n                            this.buttonAdvancedSetting.esp_syncsuccessformnotificationtext == null)) return [3 /*break*/, 2];\n                        return [4 /*yield*/, ButtonException_1.ExceptionLowCodeButton.showFormNotificationGenericError(\"Success Form Notification Text Error\", \"The success form notification text is empty! Please fill it on your configuration settings.\")];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                    case 2:\n                        this.formContext.ui.setFormNotification(this.buttonAdvancedSetting.esp_syncsuccessformnotificationtext, \"INFO\", \"LowCodeButtonFormNotification\");\n                        setTimeout(function () {\n                            _this.formContext.ui.clearFormNotification(\"LowCodeButtonFormNotification\");\n                        }, 5000);\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Clears all synchronous notifications including form notifications and progress indicators.\n     */\n    ButtonFormHelper.prototype.clearSyncNotifications = function () {\n        var _a, _b;\n        if ((_a = this.buttonAdvancedSetting) === null || _a === void 0 ? void 0 : _a.esp_syncformnotification) {\n            this.clearFormNotification();\n        }\n        if ((_b = this.buttonAdvancedSetting) === null || _b === void 0 ? void 0 : _b.esp_syncspinner) {\n            Xrm.Utility.closeProgressIndicator();\n        }\n    };\n    return ButtonFormHelper;\n}(BaseHelper_1.BaseHelper));\nexports.ButtonFormHelper = ButtonFormHelper;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/Helpers/ButtonFormHelper.ts\n");

/***/ }),

/***/ "./src/LowCodeButtonBase.ts":
/*!**********************************!*\
  !*** ./src/LowCodeButtonBase.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ButtonRegistration = void 0;\nvar LowCodeButtonFormBase_1 = __webpack_require__(/*! ./LowCodeButtonFormBase */ \"./src/LowCodeButtonFormBase.ts\");\nvar BaseHelper_1 = __webpack_require__(/*! ./Helpers/BaseHelper */ \"./src/Helpers/BaseHelper.ts\");\nvar ButtonException_1 = __webpack_require__(/*! ./Exceptions/ButtonException */ \"./src/Exceptions/ButtonException.ts\");\nvar ButtonRegistration = /** @class */ (function () {\n    function ButtonRegistration() {\n    }\n    ButtonRegistration.onClick = function (context, buttonSettingName) {\n        if (!context) {\n            ButtonException_1.ExceptionLowCodeButton.showFormNotificationGenericError(\"Registration Error\", \"No context provided\");\n            return;\n        }\n        if (!buttonSettingName) {\n            ButtonException_1.ExceptionLowCodeButton.showFormNotificationGenericError(\"Registration Error\", \"No button setting name provided\");\n            return;\n        }\n        var baseHelper = new BaseHelper_1.BaseHelper();\n        baseHelper.getButtonLocation(context);\n        switch (baseHelper.containerType) {\n            case \"form\":\n                LowCodeButtonFormBase_1.ButtonRegistrationForm.onClick(context, buttonSettingName);\n                break;\n            case \"grid\":\n                console.log(\"Grid button clicked\");\n                break;\n            case \"subgrid\":\n                console.log(\"Subgrid button clicked\");\n                break;\n            default:\n                console.log(\"Unknown button location\");\n                break;\n        }\n    };\n    return ButtonRegistration;\n}());\nexports.ButtonRegistration = ButtonRegistration;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvTG93Q29kZUJ1dHRvbkJhc2UudHMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsMEJBQTBCO0FBQzFCLDhCQUE4QixtQkFBTyxDQUFDLCtEQUF5QjtBQUMvRCxtQkFBbUIsbUJBQU8sQ0FBQyx5REFBc0I7QUFDakQsd0JBQXdCLG1CQUFPLENBQUMseUVBQThCO0FBQzlEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCwwQkFBMEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9MQ0IvLi9zcmMvTG93Q29kZUJ1dHRvbkJhc2UudHM/MmY0MiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuQnV0dG9uUmVnaXN0cmF0aW9uID0gdm9pZCAwO1xudmFyIExvd0NvZGVCdXR0b25Gb3JtQmFzZV8xID0gcmVxdWlyZShcIi4vTG93Q29kZUJ1dHRvbkZvcm1CYXNlXCIpO1xudmFyIEJhc2VIZWxwZXJfMSA9IHJlcXVpcmUoXCIuL0hlbHBlcnMvQmFzZUhlbHBlclwiKTtcbnZhciBCdXR0b25FeGNlcHRpb25fMSA9IHJlcXVpcmUoXCIuL0V4Y2VwdGlvbnMvQnV0dG9uRXhjZXB0aW9uXCIpO1xudmFyIEJ1dHRvblJlZ2lzdHJhdGlvbiA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBCdXR0b25SZWdpc3RyYXRpb24oKSB7XG4gICAgfVxuICAgIEJ1dHRvblJlZ2lzdHJhdGlvbi5vbkNsaWNrID0gZnVuY3Rpb24gKGNvbnRleHQsIGJ1dHRvblNldHRpbmdOYW1lKSB7XG4gICAgICAgIGlmICghY29udGV4dCkge1xuICAgICAgICAgICAgQnV0dG9uRXhjZXB0aW9uXzEuRXhjZXB0aW9uTG93Q29kZUJ1dHRvbi5zaG93Rm9ybU5vdGlmaWNhdGlvbkdlbmVyaWNFcnJvcihcIlJlZ2lzdHJhdGlvbiBFcnJvclwiLCBcIk5vIGNvbnRleHQgcHJvdmlkZWRcIik7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCFidXR0b25TZXR0aW5nTmFtZSkge1xuICAgICAgICAgICAgQnV0dG9uRXhjZXB0aW9uXzEuRXhjZXB0aW9uTG93Q29kZUJ1dHRvbi5zaG93Rm9ybU5vdGlmaWNhdGlvbkdlbmVyaWNFcnJvcihcIlJlZ2lzdHJhdGlvbiBFcnJvclwiLCBcIk5vIGJ1dHRvbiBzZXR0aW5nIG5hbWUgcHJvdmlkZWRcIik7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgdmFyIGJhc2VIZWxwZXIgPSBuZXcgQmFzZUhlbHBlcl8xLkJhc2VIZWxwZXIoKTtcbiAgICAgICAgYmFzZUhlbHBlci5nZXRCdXR0b25Mb2NhdGlvbihjb250ZXh0KTtcbiAgICAgICAgc3dpdGNoIChiYXNlSGVscGVyLmNvbnRhaW5lclR5cGUpIHtcbiAgICAgICAgICAgIGNhc2UgXCJmb3JtXCI6XG4gICAgICAgICAgICAgICAgTG93Q29kZUJ1dHRvbkZvcm1CYXNlXzEuQnV0dG9uUmVnaXN0cmF0aW9uRm9ybS5vbkNsaWNrKGNvbnRleHQsIGJ1dHRvblNldHRpbmdOYW1lKTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgXCJncmlkXCI6XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCJHcmlkIGJ1dHRvbiBjbGlja2VkXCIpO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSBcInN1YmdyaWRcIjpcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIlN1YmdyaWQgYnV0dG9uIGNsaWNrZWRcIik7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiVW5rbm93biBidXR0b24gbG9jYXRpb25cIik7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIHJldHVybiBCdXR0b25SZWdpc3RyYXRpb247XG59KCkpO1xuZXhwb3J0cy5CdXR0b25SZWdpc3RyYXRpb24gPSBCdXR0b25SZWdpc3RyYXRpb247XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/LowCodeButtonBase.ts\n");

/***/ }),

/***/ "./src/LowCodeButtonFormBase.ts":
/*!**************************************!*\
  !*** ./src/LowCodeButtonFormBase.ts ***!
  \**************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === \"function\" ? Iterator : Object).prototype);\n    return g.next = verb(0), g[\"throw\"] = verb(1), g[\"return\"] = verb(2), typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ButtonRegistrationForm = void 0;\nvar ButtonException_1 = __webpack_require__(/*! ./Exceptions/ButtonException */ \"./src/Exceptions/ButtonException.ts\");\nvar ButtonFormHelper_1 = __webpack_require__(/*! ./Helpers/ButtonFormHelper */ \"./src/Helpers/ButtonFormHelper.ts\");\nvar BaseButtonResponseModels_1 = __webpack_require__(/*! ./Models/BaseButtonResponseModels */ \"./src/Models/BaseButtonResponseModels.ts\");\nvar ButtonRegistrationForm = /** @class */ (function () {\n    function ButtonRegistrationForm() {\n    }\n    /**\n     * Handles the onClick event for the button inside a Form.\n     * @param formContext - The form context.\n     * @param buttonSettingName - The name of the button setting.\n     */\n    ButtonRegistrationForm.onClick = function (formContext, buttonSettingName) {\n        return __awaiter(this, void 0, void 0, function () {\n            var buttonHelper, confirmation;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        buttonHelper = new ButtonFormHelper_1.ButtonFormHelper(formContext);\n                        return [4 /*yield*/, buttonHelper.initializeSettings(buttonSettingName)];\n                    case 1:\n                        _a.sent();\n                        if (!buttonHelper.buttonAdvancedSetting.esp_showconfirmationdialog) return [3 /*break*/, 3];\n                        return [4 /*yield*/, buttonHelper.openConfirmationDialogBeforeRun()];\n                    case 2:\n                        confirmation = _a.sent();\n                        if (!confirmation) {\n                            return [2 /*return*/];\n                        }\n                        _a.label = 3;\n                    case 3:\n                        if (!(formContext.data.entity.getIsDirty() && buttonHelper.buttonSetting.esp_savebeforerunning)) return [3 /*break*/, 5];\n                        console.log(\"Saving form before running the button\");\n                        return [4 /*yield*/, formContext.data.save()];\n                    case 4:\n                        _a.sent();\n                        _a.label = 5;\n                    case 5:\n                        if (!!buttonHelper.buttonSetting.esp_endpoint) return [3 /*break*/, 7];\n                        return [4 /*yield*/, ButtonException_1.ExceptionLowCodeButton.showFormNotificationGenericError(\"Endpoint Not Set\", \"The endpoint for the button is not set. Please set it up in the button settings.\")];\n                    case 6:\n                        _a.sent();\n                        return [2 /*return*/];\n                    case 7:\n                        if (!(buttonHelper.buttonAdvancedSetting.esp_executionmode ===\n                            1 /* esp_buttonadvancedsetting_esp_buttonadvancedsetting_esp_executionmode.Async */)) return [3 /*break*/, 9];\n                        return [4 /*yield*/, this.executeAsync(buttonHelper)];\n                    case 8:\n                        _a.sent();\n                        return [3 /*break*/, 11];\n                    case 9: return [4 /*yield*/, this.executeSync(buttonHelper)];\n                    case 10:\n                        _a.sent();\n                        _a.label = 11;\n                    case 11: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Executes an asynchronous HTTP call.\n     * @param buttonHelper - The initialized ButtonFormHelper instance.\n     */\n    ButtonRegistrationForm.executeAsync = function (buttonHelper) {\n        return __awaiter(this, void 0, void 0, function () {\n            var buttonSetting, buttonAdvancedSetting;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        buttonSetting = buttonHelper.buttonSetting, buttonAdvancedSetting = buttonHelper.buttonAdvancedSetting;\n                        console.log(\"Executing async call to \".concat(buttonSetting === null || buttonSetting === void 0 ? void 0 : buttonSetting.esp_endpoint));\n                        if (!(buttonAdvancedSetting === null || buttonAdvancedSetting === void 0 ? void 0 : buttonAdvancedSetting.esp_asyncformnotification)) return [3 /*break*/, 2];\n                        return [4 /*yield*/, buttonHelper.asyncFormNotification()];\n                    case 1:\n                        _a.sent();\n                        _a.label = 2;\n                    case 2:\n                        buttonHelper.makeRequest(\"POST\", buttonSetting.esp_endpoint, buttonHelper.getPayload()).catch(function (error) { return __awaiter(_this, void 0, void 0, function () {\n                            return __generator(this, function (_a) {\n                                switch (_a.label) {\n                                    case 0: return [4 /*yield*/, ButtonException_1.ExceptionLowCodeButton.showFormNotificationGenericError(\"Error during HTTP Call\", error.message)];\n                                    case 1:\n                                        _a.sent();\n                                        return [4 /*yield*/, buttonHelper.clearFormNotification()];\n                                    case 2:\n                                        _a.sent();\n                                        return [2 /*return*/];\n                                }\n                            });\n                        }); });\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Executes a synchronous HTTP call.\n     * @param buttonHelper - The initialized ButtonFormHelper instance.\n     */\n    ButtonRegistrationForm.executeSync = function (buttonHelper) {\n        return __awaiter(this, void 0, void 0, function () {\n            var buttonSetting, buttonAdvancedSetting, response, errorMessage, _a, _b, errorText, redirectResponse, _c, _d;\n            var _this = this;\n            var _e, _f;\n            return __generator(this, function (_g) {\n                switch (_g.label) {\n                    case 0:\n                        buttonSetting = buttonHelper.buttonSetting, buttonAdvancedSetting = buttonHelper.buttonAdvancedSetting;\n                        console.log(\"Executing sync call to \".concat(buttonSetting === null || buttonSetting === void 0 ? void 0 : buttonSetting.esp_endpoint));\n                        if (!(buttonAdvancedSetting === null || buttonAdvancedSetting === void 0 ? void 0 : buttonAdvancedSetting.esp_syncformnotification)) return [3 /*break*/, 2];\n                        return [4 /*yield*/, buttonHelper.syncFormNotification()];\n                    case 1:\n                        _g.sent();\n                        _g.label = 2;\n                    case 2:\n                        if (!(buttonAdvancedSetting === null || buttonAdvancedSetting === void 0 ? void 0 : buttonAdvancedSetting.esp_syncspinner)) return [3 /*break*/, 5];\n                        if (!!buttonAdvancedSetting.esp_syncspinnertext) return [3 /*break*/, 4];\n                        return [4 /*yield*/, ButtonException_1.ExceptionLowCodeButton.showFormNotificationGenericError(\"Sync Spinner Text Error\", \"The sync spinner text is empty! Please fill it on your configuration settings.\")];\n                    case 3:\n                        _g.sent();\n                        return [2 /*return*/];\n                    case 4:\n                        Xrm.Utility.showProgressIndicator(buttonAdvancedSetting.esp_syncspinnertext);\n                        _g.label = 5;\n                    case 5: return [4 /*yield*/, buttonHelper\n                            .makeRequest(\"POST\", buttonSetting.esp_endpoint, buttonHelper.getPayload())\n                            .catch(function (error) { return __awaiter(_this, void 0, void 0, function () {\n                            return __generator(this, function (_a) {\n                                switch (_a.label) {\n                                    case 0: return [4 /*yield*/, ButtonException_1.ExceptionLowCodeButton.showFormNotificationGenericError(\"Error during HTTP Call\", error.message)];\n                                    case 1:\n                                        _a.sent();\n                                        return [2 /*return*/];\n                                }\n                            });\n                        }); })\n                            .finally(function () {\n                            if (buttonAdvancedSetting === null || buttonAdvancedSetting === void 0 ? void 0 : buttonAdvancedSetting.esp_syncspinner) {\n                                Xrm.Utility.closeProgressIndicator();\n                                buttonHelper.clearFormNotification();\n                            }\n                        })];\n                    case 6:\n                        response = _g.sent();\n                        if (!response)\n                            return [2 /*return*/];\n                        if (!(response.status === 400)) return [3 /*break*/, 9];\n                        buttonHelper.clearSyncNotifications();\n                        _b = (_a = BaseButtonResponseModels_1.ErrorMessageResponse).fromJson;\n                        return [4 /*yield*/, response.text()];\n                    case 7:\n                        errorMessage = _b.apply(_a, [_g.sent()]);\n                        return [4 /*yield*/, ButtonException_1.ExceptionLowCodeButton.showFormNotificationGenericError(errorMessage.title, errorMessage.message)];\n                    case 8:\n                        _g.sent();\n                        return [2 /*return*/];\n                    case 9:\n                        if (!(((_e = response.status) !== null && _e !== void 0 ? _e : 500) >= 500)) return [3 /*break*/, 12];\n                        buttonHelper.clearSyncNotifications();\n                        return [4 /*yield*/, response.text()];\n                    case 10:\n                        errorText = (_f = (_g.sent())) !== null && _f !== void 0 ? _f : \"An error occurred on the server. Please try again later.\";\n                        return [4 /*yield*/, ButtonException_1.ExceptionLowCodeButton.showFormNotificationGenericError(\"Error during HTTP Call\", \"Error code: \".concat(response.status, \"\\n\").concat(errorText))];\n                    case 11:\n                        _g.sent();\n                        return [2 /*return*/];\n                    case 12:\n                        if (!(response.status === 200)) return [3 /*break*/, 19];\n                        buttonHelper.clearSyncNotifications();\n                        if (!(buttonAdvancedSetting === null || buttonAdvancedSetting === void 0 ? void 0 : buttonAdvancedSetting.esp_syncsuccessformnotification)) return [3 /*break*/, 14];\n                        return [4 /*yield*/, buttonHelper.showSuccessFormNotification()];\n                    case 13:\n                        _g.sent();\n                        _g.label = 14;\n                    case 14:\n                        if (!(buttonAdvancedSetting === null || buttonAdvancedSetting === void 0 ? void 0 : buttonAdvancedSetting.esp_syncconfirmationbox)) return [3 /*break*/, 16];\n                        return [4 /*yield*/, buttonHelper.openSuccessDialogSync()];\n                    case 15:\n                        _g.sent();\n                        _g.label = 16;\n                    case 16:\n                        if (!(buttonAdvancedSetting === null || buttonAdvancedSetting === void 0 ? void 0 : buttonAdvancedSetting.esp_syncconfirmationboxredirect)) return [3 /*break*/, 18];\n                        _d = (_c = BaseButtonResponseModels_1.RedirectResponse).fromJson;\n                        return [4 /*yield*/, response.text()];\n                    case 17:\n                        redirectResponse = _d.apply(_c, [_g.sent()]);\n                        buttonHelper.openSuccessDialogRedirect(redirectResponse);\n                        _g.label = 18;\n                    case 18:\n                        buttonHelper.reloadForm();\n                        _g.label = 19;\n                    case 19: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    return ButtonRegistrationForm;\n}());\nexports.ButtonRegistrationForm = ButtonRegistrationForm;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/LowCodeButtonFormBase.ts\n");

/***/ }),

/***/ "./src/Models/BaseButtonResponseModels.ts":
/*!************************************************!*\
  !*** ./src/Models/BaseButtonResponseModels.ts ***!
  \************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ErrorMessageResponse = exports.RedirectResponse = void 0;\nvar ButtonException_1 = __webpack_require__(/*! ../Exceptions/ButtonException */ \"./src/Exceptions/ButtonException.ts\");\nvar RedirectResponse = /** @class */ (function () {\n    function RedirectResponse(redirectUri) {\n        this.redirectUri = redirectUri;\n    }\n    RedirectResponse.fromJson = function (json) {\n        var data = JSON.parse(json);\n        if (typeof data.redirectUri !== \"string\") {\n            ButtonException_1.ExceptionLowCodeButton.showFormNotificationGenericError(\"Redirect URI Not Found\", \"The redirect URI was not found in the response.\");\n            throw new Error(\"Invalid JSON format for RedirectResponse\");\n        }\n        return new RedirectResponse(data.redirectUri);\n    };\n    return RedirectResponse;\n}());\nexports.RedirectResponse = RedirectResponse;\nvar ErrorMessageResponse = /** @class */ (function () {\n    function ErrorMessageResponse(message, title) {\n        this.message = message;\n        this.title = title;\n    }\n    ErrorMessageResponse.fromJson = function (json) {\n        var _a;\n        var data = JSON.parse(json);\n        console.log(\"Error message data\", data);\n        if (typeof data.message !== \"string\") {\n            ButtonException_1.ExceptionLowCodeButton.showFormNotificationGenericError(\"Error Message Not Found\", \"The error message was not found in the response.\");\n            throw new Error(\"Invalid JSON format for ErrorMessage\");\n        }\n        return new ErrorMessageResponse(data.message, (_a = data.title) !== null && _a !== void 0 ? _a : \"\");\n    };\n    return ErrorMessageResponse;\n}());\nexports.ErrorMessageResponse = ErrorMessageResponse;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvTW9kZWxzL0Jhc2VCdXR0b25SZXNwb25zZU1vZGVscy50cyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCw0QkFBNEIsR0FBRyx3QkFBd0I7QUFDdkQsd0JBQXdCLG1CQUFPLENBQUMsMEVBQStCO0FBQy9EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNELHdCQUF3QjtBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCw0QkFBNEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9MQ0IvLi9zcmMvTW9kZWxzL0Jhc2VCdXR0b25SZXNwb25zZU1vZGVscy50cz9hNTcyIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5FcnJvck1lc3NhZ2VSZXNwb25zZSA9IGV4cG9ydHMuUmVkaXJlY3RSZXNwb25zZSA9IHZvaWQgMDtcbnZhciBCdXR0b25FeGNlcHRpb25fMSA9IHJlcXVpcmUoXCIuLi9FeGNlcHRpb25zL0J1dHRvbkV4Y2VwdGlvblwiKTtcbnZhciBSZWRpcmVjdFJlc3BvbnNlID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIFJlZGlyZWN0UmVzcG9uc2UocmVkaXJlY3RVcmkpIHtcbiAgICAgICAgdGhpcy5yZWRpcmVjdFVyaSA9IHJlZGlyZWN0VXJpO1xuICAgIH1cbiAgICBSZWRpcmVjdFJlc3BvbnNlLmZyb21Kc29uID0gZnVuY3Rpb24gKGpzb24pIHtcbiAgICAgICAgdmFyIGRhdGEgPSBKU09OLnBhcnNlKGpzb24pO1xuICAgICAgICBpZiAodHlwZW9mIGRhdGEucmVkaXJlY3RVcmkgIT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgICAgIEJ1dHRvbkV4Y2VwdGlvbl8xLkV4Y2VwdGlvbkxvd0NvZGVCdXR0b24uc2hvd0Zvcm1Ob3RpZmljYXRpb25HZW5lcmljRXJyb3IoXCJSZWRpcmVjdCBVUkkgTm90IEZvdW5kXCIsIFwiVGhlIHJlZGlyZWN0IFVSSSB3YXMgbm90IGZvdW5kIGluIHRoZSByZXNwb25zZS5cIik7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIEpTT04gZm9ybWF0IGZvciBSZWRpcmVjdFJlc3BvbnNlXCIpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBuZXcgUmVkaXJlY3RSZXNwb25zZShkYXRhLnJlZGlyZWN0VXJpKTtcbiAgICB9O1xuICAgIHJldHVybiBSZWRpcmVjdFJlc3BvbnNlO1xufSgpKTtcbmV4cG9ydHMuUmVkaXJlY3RSZXNwb25zZSA9IFJlZGlyZWN0UmVzcG9uc2U7XG52YXIgRXJyb3JNZXNzYWdlUmVzcG9uc2UgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gRXJyb3JNZXNzYWdlUmVzcG9uc2UobWVzc2FnZSwgdGl0bGUpIHtcbiAgICAgICAgdGhpcy5tZXNzYWdlID0gbWVzc2FnZTtcbiAgICAgICAgdGhpcy50aXRsZSA9IHRpdGxlO1xuICAgIH1cbiAgICBFcnJvck1lc3NhZ2VSZXNwb25zZS5mcm9tSnNvbiA9IGZ1bmN0aW9uIChqc29uKSB7XG4gICAgICAgIHZhciBfYTtcbiAgICAgICAgdmFyIGRhdGEgPSBKU09OLnBhcnNlKGpzb24pO1xuICAgICAgICBjb25zb2xlLmxvZyhcIkVycm9yIG1lc3NhZ2UgZGF0YVwiLCBkYXRhKTtcbiAgICAgICAgaWYgKHR5cGVvZiBkYXRhLm1lc3NhZ2UgIT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgICAgIEJ1dHRvbkV4Y2VwdGlvbl8xLkV4Y2VwdGlvbkxvd0NvZGVCdXR0b24uc2hvd0Zvcm1Ob3RpZmljYXRpb25HZW5lcmljRXJyb3IoXCJFcnJvciBNZXNzYWdlIE5vdCBGb3VuZFwiLCBcIlRoZSBlcnJvciBtZXNzYWdlIHdhcyBub3QgZm91bmQgaW4gdGhlIHJlc3BvbnNlLlwiKTtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIkludmFsaWQgSlNPTiBmb3JtYXQgZm9yIEVycm9yTWVzc2FnZVwiKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbmV3IEVycm9yTWVzc2FnZVJlc3BvbnNlKGRhdGEubWVzc2FnZSwgKF9hID0gZGF0YS50aXRsZSkgIT09IG51bGwgJiYgX2EgIT09IHZvaWQgMCA/IF9hIDogXCJcIik7XG4gICAgfTtcbiAgICByZXR1cm4gRXJyb3JNZXNzYWdlUmVzcG9uc2U7XG59KCkpO1xuZXhwb3J0cy5FcnJvck1lc3NhZ2VSZXNwb25zZSA9IEVycm9yTWVzc2FnZVJlc3BvbnNlO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/Models/BaseButtonResponseModels.ts\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/LowCodeButtonBase.ts");
/******/ 	LCB = __webpack_exports__;
/******/ 	
/******/ })()
;