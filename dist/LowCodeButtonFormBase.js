/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
var LCB;
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/Exceptions/ButtonException.ts":
/*!*******************************************!*\
  !*** ./src/Exceptions/ButtonException.ts ***!
  \*******************************************/
/***/ (function(__unused_webpack_module, exports) {

eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === \"function\" ? Iterator : Object).prototype);\n    return g.next = verb(0), g[\"throw\"] = verb(1), g[\"return\"] = verb(2), typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ExceptionLowCodeButton = void 0;\nvar ExceptionLowCodeButton = /** @class */ (function () {\n    function ExceptionLowCodeButton() {\n    }\n    ExceptionLowCodeButton.buttonSettingNotFound = function (buttonSettingName) {\n        return __awaiter(this, void 0, void 0, function () {\n            var errorStrings;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        errorStrings = {\n                            text: \"Button setting not found: \".concat(buttonSettingName),\n                            title: \"Button Setting Not Found\",\n                        };\n                        return [4 /*yield*/, Xrm.Navigation.openAlertDialog(errorStrings)];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    ExceptionLowCodeButton.buttonAdvancedSettingNotFound = function (lcid) {\n        return __awaiter(this, void 0, void 0, function () {\n            var errorStrings;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        errorStrings = {\n                            text: \"Button advanced setting not found for the LCID \".concat(lcid),\n                            title: \"Button Advanced Setting Not Found\",\n                        };\n                        return [4 /*yield*/, Xrm.Navigation.openAlertDialog(errorStrings)];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    ExceptionLowCodeButton.displayGenericErrorNotification = function (title, text) {\n        return __awaiter(this, void 0, void 0, function () {\n            var errorStrings;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        errorStrings = {\n                            text: text,\n                            title: title,\n                        };\n                        return [4 /*yield*/, Xrm.Navigation.openAlertDialog(errorStrings)];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    return ExceptionLowCodeButton;\n}());\nexports.ExceptionLowCodeButton = ExceptionLowCodeButton;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/Exceptions/ButtonException.ts\n");

/***/ }),

/***/ "./src/Helpers/BaseHelper.ts":
/*!***********************************!*\
  !*** ./src/Helpers/BaseHelper.ts ***!
  \***********************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === \"function\" ? Iterator : Object).prototype);\n    return g.next = verb(0), g[\"throw\"] = verb(1), g[\"return\"] = verb(2), typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.BaseHelper = void 0;\nvar ButtonException_1 = __webpack_require__(/*! ../Exceptions/ButtonException */ \"./src/Exceptions/ButtonException.ts\");\n/**\n * BaseHelper provides core functionality for determining context type and retrieving\n * configuration objects (button setting and advanced setting) using fetch XML queries.\n */\nvar BaseHelper = /** @class */ (function () {\n    function BaseHelper() {\n    }\n    /**\n     * Determines the button location based on the provided context.\n     * - If the context is a FormContext, sets containerType to \"form\" and stores it.\n     * - If the context is a GridControl, sets containerType to \"grid\" or \"subgrid\"\n     *   depending on whether getParent() returns a non-null value.\n     *\n     * @param context - Either a FormContext or a GridControl.\n     */\n    BaseHelper.prototype.getButtonLocation = function (context) {\n        if (context) {\n            if (typeof context.data === \"object\") {\n                this.formContext = context;\n                this.containerType = \"form\";\n            }\n            else if (typeof context.getGrid === \"function\") {\n                this.gridControl = context;\n                if (typeof this.gridControl.getParent === \"function\" && this.gridControl.getParent() !== null) {\n                    this.containerType = \"subgrid\";\n                }\n                else {\n                    this.containerType = \"grid\";\n                }\n            }\n        }\n    };\n    /**\n     * Retrieves the current user's language code from the global context.\n     *\n     * @returns The language code.\n     */\n    BaseHelper.prototype.getLanguageCode = function () {\n        return Xrm.Utility.getGlobalContext().userSettings.languageId;\n    };\n    /**\n     * Retrieves the current user's ID as a lowercase string with curly braces removed.\n     *\n     * @returns The user ID.\n     */\n    BaseHelper.prototype.getUserID = function () {\n        return Xrm.Utility.getGlobalContext().userSettings.userId.replace(\"{\", \"\").replace(\"}\", \"\").toLowerCase();\n    };\n    /**\n     * Retrieves the Entity Plural Name for the provided entity logical name.\n     *\n     * @returns The Entity Plural Name.\n     */\n    BaseHelper.prototype.getEntityPluralName = function (entity) {\n        return __awaiter(this, void 0, void 0, function () {\n            var name;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, Xrm.Utility.getEntityMetadata(entity)];\n                    case 1:\n                        name = _a.sent();\n                        return [2 /*return*/, name.EntitySetName];\n                }\n            });\n        });\n    };\n    /**\n     * Makes an HTTP request using fetch with pre-configured headers.\n     *\n     * @param method - The HTTP method (e.g., \"GET\", \"POST\").\n     * @param url - The URL to send the request to.\n     * @param body - Optional request body.\n     * @returns A Promise that resolves to the Response.\n     */\n    BaseHelper.prototype.makeRequest = function (method, url, body) {\n        return __awaiter(this, void 0, void 0, function () {\n            var headers, options;\n            return __generator(this, function (_a) {\n                headers = {\n                    \"Content-Type\": \"application/json\",\n                    \"OData-MaxVersion\": \"4.0\",\n                    \"OData-Version\": \"4.0\",\n                    Accept: \"application/json\",\n                    Prefer: \"odata.include-annotations=*\",\n                };\n                options = {\n                    method: method,\n                    headers: headers,\n                    body: body ? JSON.stringify(body) : undefined,\n                };\n                return [2 /*return*/, fetch(url, options)];\n            });\n        });\n    };\n    /**\n     * Retrieves the button setting record using the provided button setting name.\n     *\n     * @param buttonSettingName - The name of the button setting to retrieve.\n     * @returns A Promise that resolves to the esp_ButtonSetting or null.\n     * @throws An error if the fetch fails.\n     */\n    BaseHelper.prototype.getButtonSetting = function (buttonSettingName) {\n        return __awaiter(this, void 0, void 0, function () {\n            var fetchXml, query, url, response, data, setting, _a;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        fetchXml = \"\\n      <fetch top=\\\"1\\\">\\n        <entity name=\\\"esp_buttonsetting\\\">\\n          <attribute name=\\\"esp_buttonsettingid\\\" />\\n          <attribute name=\\\"esp_buttonlocation\\\" />\\n          <attribute name=\\\"esp_endpoint\\\" />\\n          <attribute name=\\\"esp_includecallinguseridinpayload\\\" />\\n          <attribute name=\\\"esp_includeentitylogicalnameinpayload\\\" />\\n          <attribute name=\\\"esp_includerecordidinpayload\\\" />\\n          <attribute name=\\\"esp_buttonname\\\" />\\n          <attribute name=\\\"esp_savebeforerunning\\\" />\\n          <attribute name=\\\"esp_refreshwhenapicallends\\\" />\\n          <filter type=\\\"and\\\">\\n            <condition attribute=\\\"esp_buttonname\\\" operator=\\\"eq\\\" value=\\\"\".concat(buttonSettingName, \"\\\" />\\n          </filter>\\n        </entity>\\n      </fetch>\\n    \");\n                        query = \"?fetchXml=\".concat(encodeURIComponent(fetchXml));\n                        url = \"\".concat(Xrm.Utility.getGlobalContext().getClientUrl(), \"/api/data/v9.1/esp_buttonsettings\").concat(query);\n                        _b.label = 1;\n                    case 1:\n                        _b.trys.push([1, 4, , 5]);\n                        return [4 /*yield*/, this.makeRequest(\"GET\", url)];\n                    case 2:\n                        response = _b.sent();\n                        return [4 /*yield*/, response.json()];\n                    case 3:\n                        data = _b.sent();\n                        setting = data.value[0];\n                        this.buttonSetting = setting;\n                        return [2 /*return*/, setting];\n                    case 4:\n                        _a = _b.sent();\n                        ButtonException_1.ExceptionLowCodeButton.buttonSettingNotFound(buttonSettingName);\n                        return [2 /*return*/, null];\n                    case 5: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Retrieves the advanced button setting record using the main button setting ID and language code.\n     *\n     * @param mainButtonSettingId - The ID of the main button setting.\n     * @param lcid - The language code.\n     * @returns A Promise that resolves to the esp_ButtonAdvancedSetting or null.\n     * @throws An error if the fetch fails.\n     */\n    BaseHelper.prototype.getButtonAdvancedSetting = function (mainButtonSettingId, lcid) {\n        return __awaiter(this, void 0, void 0, function () {\n            var fetchXml, query, url, response, data, advancedSetting, _a;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        fetchXml = \"\\n      <fetch top=\\\"1\\\">\\n        <entity name=\\\"esp_buttonadvancedsetting\\\">\\n          <attribute name=\\\"esp_asyncformnotification\\\" />\\n          <attribute name=\\\"esp_asyncformnotificationtext\\\" />\\n          <attribute name=\\\"esp_buttonadvancedsettingid\\\" />\\n          <attribute name=\\\"esp_confirmationdialogcancellabel\\\" />\\n          <attribute name=\\\"esp_confirmationdialogconfirmlabel\\\" />\\n          <attribute name=\\\"esp_confirmationdialogsubtitle\\\" />\\n          <attribute name=\\\"esp_confirmationdialogtext\\\" />\\n          <attribute name=\\\"esp_confirmationdialogtitle\\\" />\\n          <attribute name=\\\"esp_executionmode\\\" />\\n          <attribute name=\\\"esp_mainbuttonsetting\\\" />\\n          <attribute name=\\\"esp_modificationneededflag\\\" />\\n          <attribute name=\\\"esp_settingid\\\" />\\n          <attribute name=\\\"esp_settinglanguage\\\" />\\n          <attribute name=\\\"esp_showconfirmationdialog\\\" />\\n          <attribute name=\\\"esp_syncconfirmationboxconfirmlabel\\\" />\\n          <attribute name=\\\"esp_syncconfirmationboxredirectcancellabel\\\" />\\n          <attribute name=\\\"esp_syncconfirmationboxredirectconfirmlabel\\\" />\\n          <attribute name=\\\"esp_syncconfirmationboxredirectmode\\\" />\\n          <attribute name=\\\"esp_syncconfirmationboxredirectsubtitle\\\" />\\n          <attribute name=\\\"esp_syncconfirmationboxredirecttext\\\" />\\n          <attribute name=\\\"esp_syncconfirmationboxredirecttitle\\\" />\\n          <attribute name=\\\"esp_syncconfirmationboxtext\\\" />\\n          <attribute name=\\\"esp_syncconfirmationboxtitle\\\" />\\n          <attribute name=\\\"esp_syncconfirmationboxtype\\\" />\\n          <attribute name=\\\"esp_syncformnotification\\\" />\\n          <attribute name=\\\"esp_syncformnotificationtext\\\" />\\n          <attribute name=\\\"esp_syncrefreshform\\\" />\\n          <attribute name=\\\"esp_syncspinner\\\" />\\n          <attribute name=\\\"esp_syncspinnertext\\\" />\\n          <attribute name=\\\"esp_syncsuccessformnotification\\\" />\\n          <attribute name=\\\"esp_syncsuccessformnotificationtext\\\" />\\n          <filter>\\n            <condition attribute=\\\"esp_mainbuttonsetting\\\" operator=\\\"eq\\\" value=\\\"\".concat(mainButtonSettingId, \"\\\" />\\n          </filter>\\n          <link-entity name=\\\"esp_language\\\" from=\\\"esp_languageid\\\" to=\\\"esp_settinglanguage\\\" link-type=\\\"inner\\\">\\n            <filter>\\n              <condition attribute=\\\"esp_lcid\\\" operator=\\\"eq\\\" value=\\\"\").concat(lcid, \"\\\" />\\n            </filter>\\n          </link-entity>\\n        </entity>\\n      </fetch>\\n    \");\n                        query = \"?fetchXml=\".concat(encodeURIComponent(fetchXml));\n                        url = \"\".concat(Xrm.Utility.getGlobalContext().getClientUrl(), \"/api/data/v9.1/esp_buttonadvancedsettings\").concat(query);\n                        _b.label = 1;\n                    case 1:\n                        _b.trys.push([1, 4, , 5]);\n                        return [4 /*yield*/, this.makeRequest(\"GET\", url)];\n                    case 2:\n                        response = _b.sent();\n                        return [4 /*yield*/, response.json()];\n                    case 3:\n                        data = _b.sent();\n                        advancedSetting = data.value[0];\n                        this.buttonAdvancedSetting = advancedSetting;\n                        return [2 /*return*/, advancedSetting];\n                    case 4:\n                        _a = _b.sent();\n                        ButtonException_1.ExceptionLowCodeButton.buttonAdvancedSettingNotFound(lcid);\n                        return [2 /*return*/, null];\n                    case 5: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    BaseHelper.prototype.getAllButtonAdvancedSettingExceptTheGivenLCID = function (mainButtonSettingId, languageId) {\n        return __awaiter(this, void 0, void 0, function () {\n            var fetchXml, query, url, response, data, _a;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        fetchXml = \"\\n      <fetch>\\n        <entity name=\\\"esp_buttonadvancedsetting\\\">\\n          <attribute name=\\\"esp_asyncformnotification\\\" />\\n          <attribute name=\\\"esp_asyncformnotificationtext\\\" />\\n          <attribute name=\\\"esp_buttonadvancedsettingid\\\" />\\n          <attribute name=\\\"esp_confirmationdialogcancellabel\\\" />\\n          <attribute name=\\\"esp_confirmationdialogconfirmlabel\\\" />\\n          <attribute name=\\\"esp_confirmationdialogsubtitle\\\" />\\n          <attribute name=\\\"esp_confirmationdialogtext\\\" />\\n          <attribute name=\\\"esp_confirmationdialogtitle\\\" />\\n          <attribute name=\\\"esp_executionmode\\\" />\\n          <attribute name=\\\"esp_mainbuttonsetting\\\" />\\n          <attribute name=\\\"esp_modificationneededflag\\\" />\\n          <attribute name=\\\"esp_settingid\\\" />\\n          <attribute name=\\\"esp_settinglanguage\\\" />\\n          <attribute name=\\\"esp_showconfirmationdialog\\\" />\\n          <attribute name=\\\"esp_syncconfirmationboxconfirmlabel\\\" />\\n          <attribute name=\\\"esp_syncconfirmationboxredirectcancellabel\\\" />\\n          <attribute name=\\\"esp_syncconfirmationboxredirectconfirmlabel\\\" />\\n          <attribute name=\\\"esp_syncconfirmationboxredirectmode\\\" />\\n          <attribute name=\\\"esp_syncconfirmationboxredirectsubtitle\\\" />\\n          <attribute name=\\\"esp_syncconfirmationboxredirecttext\\\" />\\n          <attribute name=\\\"esp_syncconfirmationboxredirecttitle\\\" />\\n          <attribute name=\\\"esp_syncconfirmationboxtext\\\" />\\n          <attribute name=\\\"esp_syncconfirmationboxtitle\\\" />\\n          <attribute name=\\\"esp_syncconfirmationboxtype\\\" />\\n          <attribute name=\\\"esp_syncformnotification\\\" />\\n          <attribute name=\\\"esp_syncformnotificationtext\\\" />\\n          <attribute name=\\\"esp_syncrefreshform\\\" />\\n          <attribute name=\\\"esp_syncspinner\\\" />\\n          <attribute name=\\\"esp_syncspinnertext\\\" />\\n          <attribute name=\\\"esp_syncsuccessformnotification\\\" />\\n          <attribute name=\\\"esp_syncsuccessformnotificationtext\\\" />\\n          <filter>\\n            <condition attribute=\\\"esp_mainbuttonsetting\\\" operator=\\\"eq\\\" value=\\\"\".concat(mainButtonSettingId, \"\\\" />\\n            <condition attribute=\\\"esp_settinglanguage\\\" operator=\\\"ne\\\" value=\\\"\").concat(languageId, \"\\\" />\\n          </filter>\\n        </entity>\\n      </fetch>\\n    \");\n                        query = \"?fetchXml=\".concat(encodeURIComponent(fetchXml));\n                        url = \"\".concat(Xrm.Utility.getGlobalContext().getClientUrl(), \"/api/data/v9.1/esp_buttonadvancedsettings\").concat(query);\n                        _b.label = 1;\n                    case 1:\n                        _b.trys.push([1, 4, , 5]);\n                        debugger;\n                        return [4 /*yield*/, this.makeRequest(\"GET\", url)];\n                    case 2:\n                        response = _b.sent();\n                        return [4 /*yield*/, response.json()];\n                    case 3:\n                        data = _b.sent();\n                        return [2 /*return*/, data.value];\n                    case 4:\n                        _a = _b.sent();\n                        ButtonException_1.ExceptionLowCodeButton.displayGenericErrorNotification(\"Error\", \"Error while fetching the advanced button settings except the given LCID. Function name: getAllButtonAdvancedSettingExceptTheGivenLCID\");\n                        return [2 /*return*/, []];\n                    case 5: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Initializes settings by retrieving the button setting (using its name) and then the advanced button setting.\n     *\n     * @param buttonSettingName - The name of the button setting to retrieve.\n     */\n    BaseHelper.prototype.initializeSettings = function (buttonSettingName) {\n        return __awaiter(this, void 0, void 0, function () {\n            var setting;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.getButtonSetting(buttonSettingName)];\n                    case 1:\n                        setting = _a.sent();\n                        if (!setting) return [3 /*break*/, 3];\n                        return [4 /*yield*/, this.getButtonAdvancedSetting(setting.esp_buttonsettingid, this.getLanguageCode())];\n                    case 2:\n                        _a.sent();\n                        _a.label = 3;\n                    case 3: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    return BaseHelper;\n}());\nexports.BaseHelper = BaseHelper;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvSGVscGVycy9CYXNlSGVscGVyLnRzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSw0QkFBNEIsK0RBQStELGlCQUFpQjtBQUM1RztBQUNBLG9DQUFvQyxNQUFNLCtCQUErQixZQUFZO0FBQ3JGLG1DQUFtQyxNQUFNLG1DQUFtQyxZQUFZO0FBQ3hGLGdDQUFnQztBQUNoQztBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsY0FBYyw2QkFBNkIsMEJBQTBCLGNBQWMscUJBQXFCO0FBQ3hHLDZJQUE2SSxjQUFjO0FBQzNKLHVCQUF1QixzQkFBc0I7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0NBQXdDO0FBQ3hDLG1DQUFtQyxTQUFTO0FBQzVDLG1DQUFtQyxXQUFXLFVBQVU7QUFDeEQsMENBQTBDLGNBQWM7QUFDeEQ7QUFDQSw4R0FBOEcsT0FBTztBQUNySCxpRkFBaUYsaUJBQWlCO0FBQ2xHLHlEQUF5RCxnQkFBZ0IsUUFBUTtBQUNqRiwrQ0FBK0MsZ0JBQWdCLGdCQUFnQjtBQUMvRTtBQUNBLGtDQUFrQztBQUNsQztBQUNBO0FBQ0EsVUFBVSxZQUFZLGFBQWEsU0FBUyxVQUFVO0FBQ3RELG9DQUFvQyxTQUFTO0FBQzdDO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsa0JBQWtCO0FBQ2xCLHdCQUF3QixtQkFBTyxDQUFDLDBFQUErQjtBQUMvRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRFQUE0RSxpQkFBaUI7QUFDN0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2IsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2IsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2IsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYixTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2IsU0FBUztBQUNUO0FBQ0E7QUFDQSxDQUFDO0FBQ0Qsa0JBQWtCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vTENCLy4vc3JjL0hlbHBlcnMvQmFzZUhlbHBlci50cz8xNzFlIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fYXdhaXRlciA9ICh0aGlzICYmIHRoaXMuX19hd2FpdGVyKSB8fCBmdW5jdGlvbiAodGhpc0FyZywgX2FyZ3VtZW50cywgUCwgZ2VuZXJhdG9yKSB7XG4gICAgZnVuY3Rpb24gYWRvcHQodmFsdWUpIHsgcmV0dXJuIHZhbHVlIGluc3RhbmNlb2YgUCA/IHZhbHVlIDogbmV3IFAoZnVuY3Rpb24gKHJlc29sdmUpIHsgcmVzb2x2ZSh2YWx1ZSk7IH0pOyB9XG4gICAgcmV0dXJuIG5ldyAoUCB8fCAoUCA9IFByb21pc2UpKShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgICAgIGZ1bmN0aW9uIGZ1bGZpbGxlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvci5uZXh0KHZhbHVlKSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH1cbiAgICAgICAgZnVuY3Rpb24gcmVqZWN0ZWQodmFsdWUpIHsgdHJ5IHsgc3RlcChnZW5lcmF0b3JbXCJ0aHJvd1wiXSh2YWx1ZSkpOyB9IGNhdGNoIChlKSB7IHJlamVjdChlKTsgfSB9XG4gICAgICAgIGZ1bmN0aW9uIHN0ZXAocmVzdWx0KSB7IHJlc3VsdC5kb25lID8gcmVzb2x2ZShyZXN1bHQudmFsdWUpIDogYWRvcHQocmVzdWx0LnZhbHVlKS50aGVuKGZ1bGZpbGxlZCwgcmVqZWN0ZWQpOyB9XG4gICAgICAgIHN0ZXAoKGdlbmVyYXRvciA9IGdlbmVyYXRvci5hcHBseSh0aGlzQXJnLCBfYXJndW1lbnRzIHx8IFtdKSkubmV4dCgpKTtcbiAgICB9KTtcbn07XG52YXIgX19nZW5lcmF0b3IgPSAodGhpcyAmJiB0aGlzLl9fZ2VuZXJhdG9yKSB8fCBmdW5jdGlvbiAodGhpc0FyZywgYm9keSkge1xuICAgIHZhciBfID0geyBsYWJlbDogMCwgc2VudDogZnVuY3Rpb24oKSB7IGlmICh0WzBdICYgMSkgdGhyb3cgdFsxXTsgcmV0dXJuIHRbMV07IH0sIHRyeXM6IFtdLCBvcHM6IFtdIH0sIGYsIHksIHQsIGcgPSBPYmplY3QuY3JlYXRlKCh0eXBlb2YgSXRlcmF0b3IgPT09IFwiZnVuY3Rpb25cIiA/IEl0ZXJhdG9yIDogT2JqZWN0KS5wcm90b3R5cGUpO1xuICAgIHJldHVybiBnLm5leHQgPSB2ZXJiKDApLCBnW1widGhyb3dcIl0gPSB2ZXJiKDEpLCBnW1wicmV0dXJuXCJdID0gdmVyYigyKSwgdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIChnW1N5bWJvbC5pdGVyYXRvcl0gPSBmdW5jdGlvbigpIHsgcmV0dXJuIHRoaXM7IH0pLCBnO1xuICAgIGZ1bmN0aW9uIHZlcmIobikgeyByZXR1cm4gZnVuY3Rpb24gKHYpIHsgcmV0dXJuIHN0ZXAoW24sIHZdKTsgfTsgfVxuICAgIGZ1bmN0aW9uIHN0ZXAob3ApIHtcbiAgICAgICAgaWYgKGYpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJHZW5lcmF0b3IgaXMgYWxyZWFkeSBleGVjdXRpbmcuXCIpO1xuICAgICAgICB3aGlsZSAoZyAmJiAoZyA9IDAsIG9wWzBdICYmIChfID0gMCkpLCBfKSB0cnkge1xuICAgICAgICAgICAgaWYgKGYgPSAxLCB5ICYmICh0ID0gb3BbMF0gJiAyID8geVtcInJldHVyblwiXSA6IG9wWzBdID8geVtcInRocm93XCJdIHx8ICgodCA9IHlbXCJyZXR1cm5cIl0pICYmIHQuY2FsbCh5KSwgMCkgOiB5Lm5leHQpICYmICEodCA9IHQuY2FsbCh5LCBvcFsxXSkpLmRvbmUpIHJldHVybiB0O1xuICAgICAgICAgICAgaWYgKHkgPSAwLCB0KSBvcCA9IFtvcFswXSAmIDIsIHQudmFsdWVdO1xuICAgICAgICAgICAgc3dpdGNoIChvcFswXSkge1xuICAgICAgICAgICAgICAgIGNhc2UgMDogY2FzZSAxOiB0ID0gb3A7IGJyZWFrO1xuICAgICAgICAgICAgICAgIGNhc2UgNDogXy5sYWJlbCsrOyByZXR1cm4geyB2YWx1ZTogb3BbMV0sIGRvbmU6IGZhbHNlIH07XG4gICAgICAgICAgICAgICAgY2FzZSA1OiBfLmxhYmVsKys7IHkgPSBvcFsxXTsgb3AgPSBbMF07IGNvbnRpbnVlO1xuICAgICAgICAgICAgICAgIGNhc2UgNzogb3AgPSBfLm9wcy5wb3AoKTsgXy50cnlzLnBvcCgpOyBjb250aW51ZTtcbiAgICAgICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgICAgICBpZiAoISh0ID0gXy50cnlzLCB0ID0gdC5sZW5ndGggPiAwICYmIHRbdC5sZW5ndGggLSAxXSkgJiYgKG9wWzBdID09PSA2IHx8IG9wWzBdID09PSAyKSkgeyBfID0gMDsgY29udGludWU7IH1cbiAgICAgICAgICAgICAgICAgICAgaWYgKG9wWzBdID09PSAzICYmICghdCB8fCAob3BbMV0gPiB0WzBdICYmIG9wWzFdIDwgdFszXSkpKSB7IF8ubGFiZWwgPSBvcFsxXTsgYnJlYWs7IH1cbiAgICAgICAgICAgICAgICAgICAgaWYgKG9wWzBdID09PSA2ICYmIF8ubGFiZWwgPCB0WzFdKSB7IF8ubGFiZWwgPSB0WzFdOyB0ID0gb3A7IGJyZWFrOyB9XG4gICAgICAgICAgICAgICAgICAgIGlmICh0ICYmIF8ubGFiZWwgPCB0WzJdKSB7IF8ubGFiZWwgPSB0WzJdOyBfLm9wcy5wdXNoKG9wKTsgYnJlYWs7IH1cbiAgICAgICAgICAgICAgICAgICAgaWYgKHRbMl0pIF8ub3BzLnBvcCgpO1xuICAgICAgICAgICAgICAgICAgICBfLnRyeXMucG9wKCk7IGNvbnRpbnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgb3AgPSBib2R5LmNhbGwodGhpc0FyZywgXyk7XG4gICAgICAgIH0gY2F0Y2ggKGUpIHsgb3AgPSBbNiwgZV07IHkgPSAwOyB9IGZpbmFsbHkgeyBmID0gdCA9IDA7IH1cbiAgICAgICAgaWYgKG9wWzBdICYgNSkgdGhyb3cgb3BbMV07IHJldHVybiB7IHZhbHVlOiBvcFswXSA/IG9wWzFdIDogdm9pZCAwLCBkb25lOiB0cnVlIH07XG4gICAgfVxufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuQmFzZUhlbHBlciA9IHZvaWQgMDtcbnZhciBCdXR0b25FeGNlcHRpb25fMSA9IHJlcXVpcmUoXCIuLi9FeGNlcHRpb25zL0J1dHRvbkV4Y2VwdGlvblwiKTtcbi8qKlxuICogQmFzZUhlbHBlciBwcm92aWRlcyBjb3JlIGZ1bmN0aW9uYWxpdHkgZm9yIGRldGVybWluaW5nIGNvbnRleHQgdHlwZSBhbmQgcmV0cmlldmluZ1xuICogY29uZmlndXJhdGlvbiBvYmplY3RzIChidXR0b24gc2V0dGluZyBhbmQgYWR2YW5jZWQgc2V0dGluZykgdXNpbmcgZmV0Y2ggWE1MIHF1ZXJpZXMuXG4gKi9cbnZhciBCYXNlSGVscGVyID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIEJhc2VIZWxwZXIoKSB7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIERldGVybWluZXMgdGhlIGJ1dHRvbiBsb2NhdGlvbiBiYXNlZCBvbiB0aGUgcHJvdmlkZWQgY29udGV4dC5cbiAgICAgKiAtIElmIHRoZSBjb250ZXh0IGlzIGEgRm9ybUNvbnRleHQsIHNldHMgY29udGFpbmVyVHlwZSB0byBcImZvcm1cIiBhbmQgc3RvcmVzIGl0LlxuICAgICAqIC0gSWYgdGhlIGNvbnRleHQgaXMgYSBHcmlkQ29udHJvbCwgc2V0cyBjb250YWluZXJUeXBlIHRvIFwiZ3JpZFwiIG9yIFwic3ViZ3JpZFwiXG4gICAgICogICBkZXBlbmRpbmcgb24gd2hldGhlciBnZXRQYXJlbnQoKSByZXR1cm5zIGEgbm9uLW51bGwgdmFsdWUuXG4gICAgICpcbiAgICAgKiBAcGFyYW0gY29udGV4dCAtIEVpdGhlciBhIEZvcm1Db250ZXh0IG9yIGEgR3JpZENvbnRyb2wuXG4gICAgICovXG4gICAgQmFzZUhlbHBlci5wcm90b3R5cGUuZ2V0QnV0dG9uTG9jYXRpb24gPSBmdW5jdGlvbiAoY29udGV4dCkge1xuICAgICAgICBpZiAoY29udGV4dCkge1xuICAgICAgICAgICAgaWYgKHR5cGVvZiBjb250ZXh0LmRhdGEgPT09IFwib2JqZWN0XCIpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmZvcm1Db250ZXh0ID0gY29udGV4dDtcbiAgICAgICAgICAgICAgICB0aGlzLmNvbnRhaW5lclR5cGUgPSBcImZvcm1cIjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYgKHR5cGVvZiBjb250ZXh0LmdldEdyaWQgPT09IFwiZnVuY3Rpb25cIikge1xuICAgICAgICAgICAgICAgIHRoaXMuZ3JpZENvbnRyb2wgPSBjb250ZXh0O1xuICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgdGhpcy5ncmlkQ29udHJvbC5nZXRQYXJlbnQgPT09IFwiZnVuY3Rpb25cIiAmJiB0aGlzLmdyaWRDb250cm9sLmdldFBhcmVudCgpICE9PSBudWxsKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuY29udGFpbmVyVHlwZSA9IFwic3ViZ3JpZFwiO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5jb250YWluZXJUeXBlID0gXCJncmlkXCI7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfTtcbiAgICAvKipcbiAgICAgKiBSZXRyaWV2ZXMgdGhlIGN1cnJlbnQgdXNlcidzIGxhbmd1YWdlIGNvZGUgZnJvbSB0aGUgZ2xvYmFsIGNvbnRleHQuXG4gICAgICpcbiAgICAgKiBAcmV0dXJucyBUaGUgbGFuZ3VhZ2UgY29kZS5cbiAgICAgKi9cbiAgICBCYXNlSGVscGVyLnByb3RvdHlwZS5nZXRMYW5ndWFnZUNvZGUgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiBYcm0uVXRpbGl0eS5nZXRHbG9iYWxDb250ZXh0KCkudXNlclNldHRpbmdzLmxhbmd1YWdlSWQ7XG4gICAgfTtcbiAgICAvKipcbiAgICAgKiBSZXRyaWV2ZXMgdGhlIGN1cnJlbnQgdXNlcidzIElEIGFzIGEgbG93ZXJjYXNlIHN0cmluZyB3aXRoIGN1cmx5IGJyYWNlcyByZW1vdmVkLlxuICAgICAqXG4gICAgICogQHJldHVybnMgVGhlIHVzZXIgSUQuXG4gICAgICovXG4gICAgQmFzZUhlbHBlci5wcm90b3R5cGUuZ2V0VXNlcklEID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gWHJtLlV0aWxpdHkuZ2V0R2xvYmFsQ29udGV4dCgpLnVzZXJTZXR0aW5ncy51c2VySWQucmVwbGFjZShcIntcIiwgXCJcIikucmVwbGFjZShcIn1cIiwgXCJcIikudG9Mb3dlckNhc2UoKTtcbiAgICB9O1xuICAgIC8qKlxuICAgICAqIFJldHJpZXZlcyB0aGUgRW50aXR5IFBsdXJhbCBOYW1lIGZvciB0aGUgcHJvdmlkZWQgZW50aXR5IGxvZ2ljYWwgbmFtZS5cbiAgICAgKlxuICAgICAqIEByZXR1cm5zIFRoZSBFbnRpdHkgUGx1cmFsIE5hbWUuXG4gICAgICovXG4gICAgQmFzZUhlbHBlci5wcm90b3R5cGUuZ2V0RW50aXR5UGx1cmFsTmFtZSA9IGZ1bmN0aW9uIChlbnRpdHkpIHtcbiAgICAgICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdmFyIG5hbWU7XG4gICAgICAgICAgICByZXR1cm4gX19nZW5lcmF0b3IodGhpcywgZnVuY3Rpb24gKF9hKSB7XG4gICAgICAgICAgICAgICAgc3dpdGNoIChfYS5sYWJlbCkge1xuICAgICAgICAgICAgICAgICAgICBjYXNlIDA6IHJldHVybiBbNCAvKnlpZWxkKi8sIFhybS5VdGlsaXR5LmdldEVudGl0eU1ldGFkYXRhKGVudGl0eSldO1xuICAgICAgICAgICAgICAgICAgICBjYXNlIDE6XG4gICAgICAgICAgICAgICAgICAgICAgICBuYW1lID0gX2Euc2VudCgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFsyIC8qcmV0dXJuKi8sIG5hbWUuRW50aXR5U2V0TmFtZV07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgIH07XG4gICAgLyoqXG4gICAgICogTWFrZXMgYW4gSFRUUCByZXF1ZXN0IHVzaW5nIGZldGNoIHdpdGggcHJlLWNvbmZpZ3VyZWQgaGVhZGVycy5cbiAgICAgKlxuICAgICAqIEBwYXJhbSBtZXRob2QgLSBUaGUgSFRUUCBtZXRob2QgKGUuZy4sIFwiR0VUXCIsIFwiUE9TVFwiKS5cbiAgICAgKiBAcGFyYW0gdXJsIC0gVGhlIFVSTCB0byBzZW5kIHRoZSByZXF1ZXN0IHRvLlxuICAgICAqIEBwYXJhbSBib2R5IC0gT3B0aW9uYWwgcmVxdWVzdCBib2R5LlxuICAgICAqIEByZXR1cm5zIEEgUHJvbWlzZSB0aGF0IHJlc29sdmVzIHRvIHRoZSBSZXNwb25zZS5cbiAgICAgKi9cbiAgICBCYXNlSGVscGVyLnByb3RvdHlwZS5tYWtlUmVxdWVzdCA9IGZ1bmN0aW9uIChtZXRob2QsIHVybCwgYm9keSkge1xuICAgICAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB2YXIgaGVhZGVycywgb3B0aW9ucztcbiAgICAgICAgICAgIHJldHVybiBfX2dlbmVyYXRvcih0aGlzLCBmdW5jdGlvbiAoX2EpIHtcbiAgICAgICAgICAgICAgICBoZWFkZXJzID0ge1xuICAgICAgICAgICAgICAgICAgICBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIixcbiAgICAgICAgICAgICAgICAgICAgXCJPRGF0YS1NYXhWZXJzaW9uXCI6IFwiNC4wXCIsXG4gICAgICAgICAgICAgICAgICAgIFwiT0RhdGEtVmVyc2lvblwiOiBcIjQuMFwiLFxuICAgICAgICAgICAgICAgICAgICBBY2NlcHQ6IFwiYXBwbGljYXRpb24vanNvblwiLFxuICAgICAgICAgICAgICAgICAgICBQcmVmZXI6IFwib2RhdGEuaW5jbHVkZS1hbm5vdGF0aW9ucz0qXCIsXG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICBvcHRpb25zID0ge1xuICAgICAgICAgICAgICAgICAgICBtZXRob2Q6IG1ldGhvZCxcbiAgICAgICAgICAgICAgICAgICAgaGVhZGVyczogaGVhZGVycyxcbiAgICAgICAgICAgICAgICAgICAgYm9keTogYm9keSA/IEpTT04uc3RyaW5naWZ5KGJvZHkpIDogdW5kZWZpbmVkLFxuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgcmV0dXJuIFsyIC8qcmV0dXJuKi8sIGZldGNoKHVybCwgb3B0aW9ucyldO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgIH07XG4gICAgLyoqXG4gICAgICogUmV0cmlldmVzIHRoZSBidXR0b24gc2V0dGluZyByZWNvcmQgdXNpbmcgdGhlIHByb3ZpZGVkIGJ1dHRvbiBzZXR0aW5nIG5hbWUuXG4gICAgICpcbiAgICAgKiBAcGFyYW0gYnV0dG9uU2V0dGluZ05hbWUgLSBUaGUgbmFtZSBvZiB0aGUgYnV0dG9uIHNldHRpbmcgdG8gcmV0cmlldmUuXG4gICAgICogQHJldHVybnMgQSBQcm9taXNlIHRoYXQgcmVzb2x2ZXMgdG8gdGhlIGVzcF9CdXR0b25TZXR0aW5nIG9yIG51bGwuXG4gICAgICogQHRocm93cyBBbiBlcnJvciBpZiB0aGUgZmV0Y2ggZmFpbHMuXG4gICAgICovXG4gICAgQmFzZUhlbHBlci5wcm90b3R5cGUuZ2V0QnV0dG9uU2V0dGluZyA9IGZ1bmN0aW9uIChidXR0b25TZXR0aW5nTmFtZSkge1xuICAgICAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB2YXIgZmV0Y2hYbWwsIHF1ZXJ5LCB1cmwsIHJlc3BvbnNlLCBkYXRhLCBzZXR0aW5nLCBfYTtcbiAgICAgICAgICAgIHJldHVybiBfX2dlbmVyYXRvcih0aGlzLCBmdW5jdGlvbiAoX2IpIHtcbiAgICAgICAgICAgICAgICBzd2l0Y2ggKF9iLmxhYmVsKSB7XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgMDpcbiAgICAgICAgICAgICAgICAgICAgICAgIGZldGNoWG1sID0gXCJcXG4gICAgICA8ZmV0Y2ggdG9wPVxcXCIxXFxcIj5cXG4gICAgICAgIDxlbnRpdHkgbmFtZT1cXFwiZXNwX2J1dHRvbnNldHRpbmdcXFwiPlxcbiAgICAgICAgICA8YXR0cmlidXRlIG5hbWU9XFxcImVzcF9idXR0b25zZXR0aW5naWRcXFwiIC8+XFxuICAgICAgICAgIDxhdHRyaWJ1dGUgbmFtZT1cXFwiZXNwX2J1dHRvbmxvY2F0aW9uXFxcIiAvPlxcbiAgICAgICAgICA8YXR0cmlidXRlIG5hbWU9XFxcImVzcF9lbmRwb2ludFxcXCIgLz5cXG4gICAgICAgICAgPGF0dHJpYnV0ZSBuYW1lPVxcXCJlc3BfaW5jbHVkZWNhbGxpbmd1c2VyaWRpbnBheWxvYWRcXFwiIC8+XFxuICAgICAgICAgIDxhdHRyaWJ1dGUgbmFtZT1cXFwiZXNwX2luY2x1ZGVlbnRpdHlsb2dpY2FsbmFtZWlucGF5bG9hZFxcXCIgLz5cXG4gICAgICAgICAgPGF0dHJpYnV0ZSBuYW1lPVxcXCJlc3BfaW5jbHVkZXJlY29yZGlkaW5wYXlsb2FkXFxcIiAvPlxcbiAgICAgICAgICA8YXR0cmlidXRlIG5hbWU9XFxcImVzcF9idXR0b25uYW1lXFxcIiAvPlxcbiAgICAgICAgICA8YXR0cmlidXRlIG5hbWU9XFxcImVzcF9zYXZlYmVmb3JlcnVubmluZ1xcXCIgLz5cXG4gICAgICAgICAgPGF0dHJpYnV0ZSBuYW1lPVxcXCJlc3BfcmVmcmVzaHdoZW5hcGljYWxsZW5kc1xcXCIgLz5cXG4gICAgICAgICAgPGZpbHRlciB0eXBlPVxcXCJhbmRcXFwiPlxcbiAgICAgICAgICAgIDxjb25kaXRpb24gYXR0cmlidXRlPVxcXCJlc3BfYnV0dG9ubmFtZVxcXCIgb3BlcmF0b3I9XFxcImVxXFxcIiB2YWx1ZT1cXFwiXCIuY29uY2F0KGJ1dHRvblNldHRpbmdOYW1lLCBcIlxcXCIgLz5cXG4gICAgICAgICAgPC9maWx0ZXI+XFxuICAgICAgICA8L2VudGl0eT5cXG4gICAgICA8L2ZldGNoPlxcbiAgICBcIik7XG4gICAgICAgICAgICAgICAgICAgICAgICBxdWVyeSA9IFwiP2ZldGNoWG1sPVwiLmNvbmNhdChlbmNvZGVVUklDb21wb25lbnQoZmV0Y2hYbWwpKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHVybCA9IFwiXCIuY29uY2F0KFhybS5VdGlsaXR5LmdldEdsb2JhbENvbnRleHQoKS5nZXRDbGllbnRVcmwoKSwgXCIvYXBpL2RhdGEvdjkuMS9lc3BfYnV0dG9uc2V0dGluZ3NcIikuY29uY2F0KHF1ZXJ5KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIF9iLmxhYmVsID0gMTtcbiAgICAgICAgICAgICAgICAgICAgY2FzZSAxOlxuICAgICAgICAgICAgICAgICAgICAgICAgX2IudHJ5cy5wdXNoKFsxLCA0LCAsIDVdKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBbNCAvKnlpZWxkKi8sIHRoaXMubWFrZVJlcXVlc3QoXCJHRVRcIiwgdXJsKV07XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgMjpcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlc3BvbnNlID0gX2Iuc2VudCgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFs0IC8qeWllbGQqLywgcmVzcG9uc2UuanNvbigpXTtcbiAgICAgICAgICAgICAgICAgICAgY2FzZSAzOlxuICAgICAgICAgICAgICAgICAgICAgICAgZGF0YSA9IF9iLnNlbnQoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHNldHRpbmcgPSBkYXRhLnZhbHVlWzBdO1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5idXR0b25TZXR0aW5nID0gc2V0dGluZztcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBbMiAvKnJldHVybiovLCBzZXR0aW5nXTtcbiAgICAgICAgICAgICAgICAgICAgY2FzZSA0OlxuICAgICAgICAgICAgICAgICAgICAgICAgX2EgPSBfYi5zZW50KCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBCdXR0b25FeGNlcHRpb25fMS5FeGNlcHRpb25Mb3dDb2RlQnV0dG9uLmJ1dHRvblNldHRpbmdOb3RGb3VuZChidXR0b25TZXR0aW5nTmFtZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gWzIgLypyZXR1cm4qLywgbnVsbF07XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgNTogcmV0dXJuIFsyIC8qcmV0dXJuKi9dO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICB9O1xuICAgIC8qKlxuICAgICAqIFJldHJpZXZlcyB0aGUgYWR2YW5jZWQgYnV0dG9uIHNldHRpbmcgcmVjb3JkIHVzaW5nIHRoZSBtYWluIGJ1dHRvbiBzZXR0aW5nIElEIGFuZCBsYW5ndWFnZSBjb2RlLlxuICAgICAqXG4gICAgICogQHBhcmFtIG1haW5CdXR0b25TZXR0aW5nSWQgLSBUaGUgSUQgb2YgdGhlIG1haW4gYnV0dG9uIHNldHRpbmcuXG4gICAgICogQHBhcmFtIGxjaWQgLSBUaGUgbGFuZ3VhZ2UgY29kZS5cbiAgICAgKiBAcmV0dXJucyBBIFByb21pc2UgdGhhdCByZXNvbHZlcyB0byB0aGUgZXNwX0J1dHRvbkFkdmFuY2VkU2V0dGluZyBvciBudWxsLlxuICAgICAqIEB0aHJvd3MgQW4gZXJyb3IgaWYgdGhlIGZldGNoIGZhaWxzLlxuICAgICAqL1xuICAgIEJhc2VIZWxwZXIucHJvdG90eXBlLmdldEJ1dHRvbkFkdmFuY2VkU2V0dGluZyA9IGZ1bmN0aW9uIChtYWluQnV0dG9uU2V0dGluZ0lkLCBsY2lkKSB7XG4gICAgICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHZhciBmZXRjaFhtbCwgcXVlcnksIHVybCwgcmVzcG9uc2UsIGRhdGEsIGFkdmFuY2VkU2V0dGluZywgX2E7XG4gICAgICAgICAgICByZXR1cm4gX19nZW5lcmF0b3IodGhpcywgZnVuY3Rpb24gKF9iKSB7XG4gICAgICAgICAgICAgICAgc3dpdGNoIChfYi5sYWJlbCkge1xuICAgICAgICAgICAgICAgICAgICBjYXNlIDA6XG4gICAgICAgICAgICAgICAgICAgICAgICBmZXRjaFhtbCA9IFwiXFxuICAgICAgPGZldGNoIHRvcD1cXFwiMVxcXCI+XFxuICAgICAgICA8ZW50aXR5IG5hbWU9XFxcImVzcF9idXR0b25hZHZhbmNlZHNldHRpbmdcXFwiPlxcbiAgICAgICAgICA8YXR0cmlidXRlIG5hbWU9XFxcImVzcF9hc3luY2Zvcm1ub3RpZmljYXRpb25cXFwiIC8+XFxuICAgICAgICAgIDxhdHRyaWJ1dGUgbmFtZT1cXFwiZXNwX2FzeW5jZm9ybW5vdGlmaWNhdGlvbnRleHRcXFwiIC8+XFxuICAgICAgICAgIDxhdHRyaWJ1dGUgbmFtZT1cXFwiZXNwX2J1dHRvbmFkdmFuY2Vkc2V0dGluZ2lkXFxcIiAvPlxcbiAgICAgICAgICA8YXR0cmlidXRlIG5hbWU9XFxcImVzcF9jb25maXJtYXRpb25kaWFsb2djYW5jZWxsYWJlbFxcXCIgLz5cXG4gICAgICAgICAgPGF0dHJpYnV0ZSBuYW1lPVxcXCJlc3BfY29uZmlybWF0aW9uZGlhbG9nY29uZmlybWxhYmVsXFxcIiAvPlxcbiAgICAgICAgICA8YXR0cmlidXRlIG5hbWU9XFxcImVzcF9jb25maXJtYXRpb25kaWFsb2dzdWJ0aXRsZVxcXCIgLz5cXG4gICAgICAgICAgPGF0dHJpYnV0ZSBuYW1lPVxcXCJlc3BfY29uZmlybWF0aW9uZGlhbG9ndGV4dFxcXCIgLz5cXG4gICAgICAgICAgPGF0dHJpYnV0ZSBuYW1lPVxcXCJlc3BfY29uZmlybWF0aW9uZGlhbG9ndGl0bGVcXFwiIC8+XFxuICAgICAgICAgIDxhdHRyaWJ1dGUgbmFtZT1cXFwiZXNwX2V4ZWN1dGlvbm1vZGVcXFwiIC8+XFxuICAgICAgICAgIDxhdHRyaWJ1dGUgbmFtZT1cXFwiZXNwX21haW5idXR0b25zZXR0aW5nXFxcIiAvPlxcbiAgICAgICAgICA8YXR0cmlidXRlIG5hbWU9XFxcImVzcF9tb2RpZmljYXRpb25uZWVkZWRmbGFnXFxcIiAvPlxcbiAgICAgICAgICA8YXR0cmlidXRlIG5hbWU9XFxcImVzcF9zZXR0aW5naWRcXFwiIC8+XFxuICAgICAgICAgIDxhdHRyaWJ1dGUgbmFtZT1cXFwiZXNwX3NldHRpbmdsYW5ndWFnZVxcXCIgLz5cXG4gICAgICAgICAgPGF0dHJpYnV0ZSBuYW1lPVxcXCJlc3Bfc2hvd2NvbmZpcm1hdGlvbmRpYWxvZ1xcXCIgLz5cXG4gICAgICAgICAgPGF0dHJpYnV0ZSBuYW1lPVxcXCJlc3Bfc3luY2NvbmZpcm1hdGlvbmJveGNvbmZpcm1sYWJlbFxcXCIgLz5cXG4gICAgICAgICAgPGF0dHJpYnV0ZSBuYW1lPVxcXCJlc3Bfc3luY2NvbmZpcm1hdGlvbmJveHJlZGlyZWN0Y2FuY2VsbGFiZWxcXFwiIC8+XFxuICAgICAgICAgIDxhdHRyaWJ1dGUgbmFtZT1cXFwiZXNwX3N5bmNjb25maXJtYXRpb25ib3hyZWRpcmVjdGNvbmZpcm1sYWJlbFxcXCIgLz5cXG4gICAgICAgICAgPGF0dHJpYnV0ZSBuYW1lPVxcXCJlc3Bfc3luY2NvbmZpcm1hdGlvbmJveHJlZGlyZWN0bW9kZVxcXCIgLz5cXG4gICAgICAgICAgPGF0dHJpYnV0ZSBuYW1lPVxcXCJlc3Bfc3luY2NvbmZpcm1hdGlvbmJveHJlZGlyZWN0c3VidGl0bGVcXFwiIC8+XFxuICAgICAgICAgIDxhdHRyaWJ1dGUgbmFtZT1cXFwiZXNwX3N5bmNjb25maXJtYXRpb25ib3hyZWRpcmVjdHRleHRcXFwiIC8+XFxuICAgICAgICAgIDxhdHRyaWJ1dGUgbmFtZT1cXFwiZXNwX3N5bmNjb25maXJtYXRpb25ib3hyZWRpcmVjdHRpdGxlXFxcIiAvPlxcbiAgICAgICAgICA8YXR0cmlidXRlIG5hbWU9XFxcImVzcF9zeW5jY29uZmlybWF0aW9uYm94dGV4dFxcXCIgLz5cXG4gICAgICAgICAgPGF0dHJpYnV0ZSBuYW1lPVxcXCJlc3Bfc3luY2NvbmZpcm1hdGlvbmJveHRpdGxlXFxcIiAvPlxcbiAgICAgICAgICA8YXR0cmlidXRlIG5hbWU9XFxcImVzcF9zeW5jY29uZmlybWF0aW9uYm94dHlwZVxcXCIgLz5cXG4gICAgICAgICAgPGF0dHJpYnV0ZSBuYW1lPVxcXCJlc3Bfc3luY2Zvcm1ub3RpZmljYXRpb25cXFwiIC8+XFxuICAgICAgICAgIDxhdHRyaWJ1dGUgbmFtZT1cXFwiZXNwX3N5bmNmb3Jtbm90aWZpY2F0aW9udGV4dFxcXCIgLz5cXG4gICAgICAgICAgPGF0dHJpYnV0ZSBuYW1lPVxcXCJlc3Bfc3luY3JlZnJlc2hmb3JtXFxcIiAvPlxcbiAgICAgICAgICA8YXR0cmlidXRlIG5hbWU9XFxcImVzcF9zeW5jc3Bpbm5lclxcXCIgLz5cXG4gICAgICAgICAgPGF0dHJpYnV0ZSBuYW1lPVxcXCJlc3Bfc3luY3NwaW5uZXJ0ZXh0XFxcIiAvPlxcbiAgICAgICAgICA8YXR0cmlidXRlIG5hbWU9XFxcImVzcF9zeW5jc3VjY2Vzc2Zvcm1ub3RpZmljYXRpb25cXFwiIC8+XFxuICAgICAgICAgIDxhdHRyaWJ1dGUgbmFtZT1cXFwiZXNwX3N5bmNzdWNjZXNzZm9ybW5vdGlmaWNhdGlvbnRleHRcXFwiIC8+XFxuICAgICAgICAgIDxmaWx0ZXI+XFxuICAgICAgICAgICAgPGNvbmRpdGlvbiBhdHRyaWJ1dGU9XFxcImVzcF9tYWluYnV0dG9uc2V0dGluZ1xcXCIgb3BlcmF0b3I9XFxcImVxXFxcIiB2YWx1ZT1cXFwiXCIuY29uY2F0KG1haW5CdXR0b25TZXR0aW5nSWQsIFwiXFxcIiAvPlxcbiAgICAgICAgICA8L2ZpbHRlcj5cXG4gICAgICAgICAgPGxpbmstZW50aXR5IG5hbWU9XFxcImVzcF9sYW5ndWFnZVxcXCIgZnJvbT1cXFwiZXNwX2xhbmd1YWdlaWRcXFwiIHRvPVxcXCJlc3Bfc2V0dGluZ2xhbmd1YWdlXFxcIiBsaW5rLXR5cGU9XFxcImlubmVyXFxcIj5cXG4gICAgICAgICAgICA8ZmlsdGVyPlxcbiAgICAgICAgICAgICAgPGNvbmRpdGlvbiBhdHRyaWJ1dGU9XFxcImVzcF9sY2lkXFxcIiBvcGVyYXRvcj1cXFwiZXFcXFwiIHZhbHVlPVxcXCJcIikuY29uY2F0KGxjaWQsIFwiXFxcIiAvPlxcbiAgICAgICAgICAgIDwvZmlsdGVyPlxcbiAgICAgICAgICA8L2xpbmstZW50aXR5PlxcbiAgICAgICAgPC9lbnRpdHk+XFxuICAgICAgPC9mZXRjaD5cXG4gICAgXCIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgcXVlcnkgPSBcIj9mZXRjaFhtbD1cIi5jb25jYXQoZW5jb2RlVVJJQ29tcG9uZW50KGZldGNoWG1sKSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB1cmwgPSBcIlwiLmNvbmNhdChYcm0uVXRpbGl0eS5nZXRHbG9iYWxDb250ZXh0KCkuZ2V0Q2xpZW50VXJsKCksIFwiL2FwaS9kYXRhL3Y5LjEvZXNwX2J1dHRvbmFkdmFuY2Vkc2V0dGluZ3NcIikuY29uY2F0KHF1ZXJ5KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIF9iLmxhYmVsID0gMTtcbiAgICAgICAgICAgICAgICAgICAgY2FzZSAxOlxuICAgICAgICAgICAgICAgICAgICAgICAgX2IudHJ5cy5wdXNoKFsxLCA0LCAsIDVdKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBbNCAvKnlpZWxkKi8sIHRoaXMubWFrZVJlcXVlc3QoXCJHRVRcIiwgdXJsKV07XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgMjpcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlc3BvbnNlID0gX2Iuc2VudCgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFs0IC8qeWllbGQqLywgcmVzcG9uc2UuanNvbigpXTtcbiAgICAgICAgICAgICAgICAgICAgY2FzZSAzOlxuICAgICAgICAgICAgICAgICAgICAgICAgZGF0YSA9IF9iLnNlbnQoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGFkdmFuY2VkU2V0dGluZyA9IGRhdGEudmFsdWVbMF07XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmJ1dHRvbkFkdmFuY2VkU2V0dGluZyA9IGFkdmFuY2VkU2V0dGluZztcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBbMiAvKnJldHVybiovLCBhZHZhbmNlZFNldHRpbmddO1xuICAgICAgICAgICAgICAgICAgICBjYXNlIDQ6XG4gICAgICAgICAgICAgICAgICAgICAgICBfYSA9IF9iLnNlbnQoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIEJ1dHRvbkV4Y2VwdGlvbl8xLkV4Y2VwdGlvbkxvd0NvZGVCdXR0b24uYnV0dG9uQWR2YW5jZWRTZXR0aW5nTm90Rm91bmQobGNpZCk7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gWzIgLypyZXR1cm4qLywgbnVsbF07XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgNTogcmV0dXJuIFsyIC8qcmV0dXJuKi9dO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICB9O1xuICAgIEJhc2VIZWxwZXIucHJvdG90eXBlLmdldEFsbEJ1dHRvbkFkdmFuY2VkU2V0dGluZ0V4Y2VwdFRoZUdpdmVuTENJRCA9IGZ1bmN0aW9uIChtYWluQnV0dG9uU2V0dGluZ0lkLCBsYW5ndWFnZUlkKSB7XG4gICAgICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHZhciBmZXRjaFhtbCwgcXVlcnksIHVybCwgcmVzcG9uc2UsIGRhdGEsIF9hO1xuICAgICAgICAgICAgcmV0dXJuIF9fZ2VuZXJhdG9yKHRoaXMsIGZ1bmN0aW9uIChfYikge1xuICAgICAgICAgICAgICAgIHN3aXRjaCAoX2IubGFiZWwpIHtcbiAgICAgICAgICAgICAgICAgICAgY2FzZSAwOlxuICAgICAgICAgICAgICAgICAgICAgICAgZmV0Y2hYbWwgPSBcIlxcbiAgICAgIDxmZXRjaD5cXG4gICAgICAgIDxlbnRpdHkgbmFtZT1cXFwiZXNwX2J1dHRvbmFkdmFuY2Vkc2V0dGluZ1xcXCI+XFxuICAgICAgICAgIDxhdHRyaWJ1dGUgbmFtZT1cXFwiZXNwX2FzeW5jZm9ybW5vdGlmaWNhdGlvblxcXCIgLz5cXG4gICAgICAgICAgPGF0dHJpYnV0ZSBuYW1lPVxcXCJlc3BfYXN5bmNmb3Jtbm90aWZpY2F0aW9udGV4dFxcXCIgLz5cXG4gICAgICAgICAgPGF0dHJpYnV0ZSBuYW1lPVxcXCJlc3BfYnV0dG9uYWR2YW5jZWRzZXR0aW5naWRcXFwiIC8+XFxuICAgICAgICAgIDxhdHRyaWJ1dGUgbmFtZT1cXFwiZXNwX2NvbmZpcm1hdGlvbmRpYWxvZ2NhbmNlbGxhYmVsXFxcIiAvPlxcbiAgICAgICAgICA8YXR0cmlidXRlIG5hbWU9XFxcImVzcF9jb25maXJtYXRpb25kaWFsb2djb25maXJtbGFiZWxcXFwiIC8+XFxuICAgICAgICAgIDxhdHRyaWJ1dGUgbmFtZT1cXFwiZXNwX2NvbmZpcm1hdGlvbmRpYWxvZ3N1YnRpdGxlXFxcIiAvPlxcbiAgICAgICAgICA8YXR0cmlidXRlIG5hbWU9XFxcImVzcF9jb25maXJtYXRpb25kaWFsb2d0ZXh0XFxcIiAvPlxcbiAgICAgICAgICA8YXR0cmlidXRlIG5hbWU9XFxcImVzcF9jb25maXJtYXRpb25kaWFsb2d0aXRsZVxcXCIgLz5cXG4gICAgICAgICAgPGF0dHJpYnV0ZSBuYW1lPVxcXCJlc3BfZXhlY3V0aW9ubW9kZVxcXCIgLz5cXG4gICAgICAgICAgPGF0dHJpYnV0ZSBuYW1lPVxcXCJlc3BfbWFpbmJ1dHRvbnNldHRpbmdcXFwiIC8+XFxuICAgICAgICAgIDxhdHRyaWJ1dGUgbmFtZT1cXFwiZXNwX21vZGlmaWNhdGlvbm5lZWRlZGZsYWdcXFwiIC8+XFxuICAgICAgICAgIDxhdHRyaWJ1dGUgbmFtZT1cXFwiZXNwX3NldHRpbmdpZFxcXCIgLz5cXG4gICAgICAgICAgPGF0dHJpYnV0ZSBuYW1lPVxcXCJlc3Bfc2V0dGluZ2xhbmd1YWdlXFxcIiAvPlxcbiAgICAgICAgICA8YXR0cmlidXRlIG5hbWU9XFxcImVzcF9zaG93Y29uZmlybWF0aW9uZGlhbG9nXFxcIiAvPlxcbiAgICAgICAgICA8YXR0cmlidXRlIG5hbWU9XFxcImVzcF9zeW5jY29uZmlybWF0aW9uYm94Y29uZmlybWxhYmVsXFxcIiAvPlxcbiAgICAgICAgICA8YXR0cmlidXRlIG5hbWU9XFxcImVzcF9zeW5jY29uZmlybWF0aW9uYm94cmVkaXJlY3RjYW5jZWxsYWJlbFxcXCIgLz5cXG4gICAgICAgICAgPGF0dHJpYnV0ZSBuYW1lPVxcXCJlc3Bfc3luY2NvbmZpcm1hdGlvbmJveHJlZGlyZWN0Y29uZmlybWxhYmVsXFxcIiAvPlxcbiAgICAgICAgICA8YXR0cmlidXRlIG5hbWU9XFxcImVzcF9zeW5jY29uZmlybWF0aW9uYm94cmVkaXJlY3Rtb2RlXFxcIiAvPlxcbiAgICAgICAgICA8YXR0cmlidXRlIG5hbWU9XFxcImVzcF9zeW5jY29uZmlybWF0aW9uYm94cmVkaXJlY3RzdWJ0aXRsZVxcXCIgLz5cXG4gICAgICAgICAgPGF0dHJpYnV0ZSBuYW1lPVxcXCJlc3Bfc3luY2NvbmZpcm1hdGlvbmJveHJlZGlyZWN0dGV4dFxcXCIgLz5cXG4gICAgICAgICAgPGF0dHJpYnV0ZSBuYW1lPVxcXCJlc3Bfc3luY2NvbmZpcm1hdGlvbmJveHJlZGlyZWN0dGl0bGVcXFwiIC8+XFxuICAgICAgICAgIDxhdHRyaWJ1dGUgbmFtZT1cXFwiZXNwX3N5bmNjb25maXJtYXRpb25ib3h0ZXh0XFxcIiAvPlxcbiAgICAgICAgICA8YXR0cmlidXRlIG5hbWU9XFxcImVzcF9zeW5jY29uZmlybWF0aW9uYm94dGl0bGVcXFwiIC8+XFxuICAgICAgICAgIDxhdHRyaWJ1dGUgbmFtZT1cXFwiZXNwX3N5bmNjb25maXJtYXRpb25ib3h0eXBlXFxcIiAvPlxcbiAgICAgICAgICA8YXR0cmlidXRlIG5hbWU9XFxcImVzcF9zeW5jZm9ybW5vdGlmaWNhdGlvblxcXCIgLz5cXG4gICAgICAgICAgPGF0dHJpYnV0ZSBuYW1lPVxcXCJlc3Bfc3luY2Zvcm1ub3RpZmljYXRpb250ZXh0XFxcIiAvPlxcbiAgICAgICAgICA8YXR0cmlidXRlIG5hbWU9XFxcImVzcF9zeW5jcmVmcmVzaGZvcm1cXFwiIC8+XFxuICAgICAgICAgIDxhdHRyaWJ1dGUgbmFtZT1cXFwiZXNwX3N5bmNzcGlubmVyXFxcIiAvPlxcbiAgICAgICAgICA8YXR0cmlidXRlIG5hbWU9XFxcImVzcF9zeW5jc3Bpbm5lcnRleHRcXFwiIC8+XFxuICAgICAgICAgIDxhdHRyaWJ1dGUgbmFtZT1cXFwiZXNwX3N5bmNzdWNjZXNzZm9ybW5vdGlmaWNhdGlvblxcXCIgLz5cXG4gICAgICAgICAgPGF0dHJpYnV0ZSBuYW1lPVxcXCJlc3Bfc3luY3N1Y2Nlc3Nmb3Jtbm90aWZpY2F0aW9udGV4dFxcXCIgLz5cXG4gICAgICAgICAgPGZpbHRlcj5cXG4gICAgICAgICAgICA8Y29uZGl0aW9uIGF0dHJpYnV0ZT1cXFwiZXNwX21haW5idXR0b25zZXR0aW5nXFxcIiBvcGVyYXRvcj1cXFwiZXFcXFwiIHZhbHVlPVxcXCJcIi5jb25jYXQobWFpbkJ1dHRvblNldHRpbmdJZCwgXCJcXFwiIC8+XFxuICAgICAgICAgICAgPGNvbmRpdGlvbiBhdHRyaWJ1dGU9XFxcImVzcF9zZXR0aW5nbGFuZ3VhZ2VcXFwiIG9wZXJhdG9yPVxcXCJuZVxcXCIgdmFsdWU9XFxcIlwiKS5jb25jYXQobGFuZ3VhZ2VJZCwgXCJcXFwiIC8+XFxuICAgICAgICAgIDwvZmlsdGVyPlxcbiAgICAgICAgPC9lbnRpdHk+XFxuICAgICAgPC9mZXRjaD5cXG4gICAgXCIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgcXVlcnkgPSBcIj9mZXRjaFhtbD1cIi5jb25jYXQoZW5jb2RlVVJJQ29tcG9uZW50KGZldGNoWG1sKSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB1cmwgPSBcIlwiLmNvbmNhdChYcm0uVXRpbGl0eS5nZXRHbG9iYWxDb250ZXh0KCkuZ2V0Q2xpZW50VXJsKCksIFwiL2FwaS9kYXRhL3Y5LjEvZXNwX2J1dHRvbmFkdmFuY2Vkc2V0dGluZ3NcIikuY29uY2F0KHF1ZXJ5KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIF9iLmxhYmVsID0gMTtcbiAgICAgICAgICAgICAgICAgICAgY2FzZSAxOlxuICAgICAgICAgICAgICAgICAgICAgICAgX2IudHJ5cy5wdXNoKFsxLCA0LCAsIDVdKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGRlYnVnZ2VyO1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFs0IC8qeWllbGQqLywgdGhpcy5tYWtlUmVxdWVzdChcIkdFVFwiLCB1cmwpXTtcbiAgICAgICAgICAgICAgICAgICAgY2FzZSAyOlxuICAgICAgICAgICAgICAgICAgICAgICAgcmVzcG9uc2UgPSBfYi5zZW50KCk7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gWzQgLyp5aWVsZCovLCByZXNwb25zZS5qc29uKCldO1xuICAgICAgICAgICAgICAgICAgICBjYXNlIDM6XG4gICAgICAgICAgICAgICAgICAgICAgICBkYXRhID0gX2Iuc2VudCgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFsyIC8qcmV0dXJuKi8sIGRhdGEudmFsdWVdO1xuICAgICAgICAgICAgICAgICAgICBjYXNlIDQ6XG4gICAgICAgICAgICAgICAgICAgICAgICBfYSA9IF9iLnNlbnQoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIEJ1dHRvbkV4Y2VwdGlvbl8xLkV4Y2VwdGlvbkxvd0NvZGVCdXR0b24uZGlzcGxheUdlbmVyaWNFcnJvck5vdGlmaWNhdGlvbihcIkVycm9yXCIsIFwiRXJyb3Igd2hpbGUgZmV0Y2hpbmcgdGhlIGFkdmFuY2VkIGJ1dHRvbiBzZXR0aW5ncyBleGNlcHQgdGhlIGdpdmVuIExDSUQuIEZ1bmN0aW9uIG5hbWU6IGdldEFsbEJ1dHRvbkFkdmFuY2VkU2V0dGluZ0V4Y2VwdFRoZUdpdmVuTENJRFwiKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBbMiAvKnJldHVybiovLCBbXV07XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgNTogcmV0dXJuIFsyIC8qcmV0dXJuKi9dO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICB9O1xuICAgIC8qKlxuICAgICAqIEluaXRpYWxpemVzIHNldHRpbmdzIGJ5IHJldHJpZXZpbmcgdGhlIGJ1dHRvbiBzZXR0aW5nICh1c2luZyBpdHMgbmFtZSkgYW5kIHRoZW4gdGhlIGFkdmFuY2VkIGJ1dHRvbiBzZXR0aW5nLlxuICAgICAqXG4gICAgICogQHBhcmFtIGJ1dHRvblNldHRpbmdOYW1lIC0gVGhlIG5hbWUgb2YgdGhlIGJ1dHRvbiBzZXR0aW5nIHRvIHJldHJpZXZlLlxuICAgICAqL1xuICAgIEJhc2VIZWxwZXIucHJvdG90eXBlLmluaXRpYWxpemVTZXR0aW5ncyA9IGZ1bmN0aW9uIChidXR0b25TZXR0aW5nTmFtZSkge1xuICAgICAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB2YXIgc2V0dGluZztcbiAgICAgICAgICAgIHJldHVybiBfX2dlbmVyYXRvcih0aGlzLCBmdW5jdGlvbiAoX2EpIHtcbiAgICAgICAgICAgICAgICBzd2l0Y2ggKF9hLmxhYmVsKSB7XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgMDogcmV0dXJuIFs0IC8qeWllbGQqLywgdGhpcy5nZXRCdXR0b25TZXR0aW5nKGJ1dHRvblNldHRpbmdOYW1lKV07XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgMTpcbiAgICAgICAgICAgICAgICAgICAgICAgIHNldHRpbmcgPSBfYS5zZW50KCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoIXNldHRpbmcpIHJldHVybiBbMyAvKmJyZWFrKi8sIDNdO1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFs0IC8qeWllbGQqLywgdGhpcy5nZXRCdXR0b25BZHZhbmNlZFNldHRpbmcoc2V0dGluZy5lc3BfYnV0dG9uc2V0dGluZ2lkLCB0aGlzLmdldExhbmd1YWdlQ29kZSgpKV07XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgMjpcbiAgICAgICAgICAgICAgICAgICAgICAgIF9hLnNlbnQoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIF9hLmxhYmVsID0gMztcbiAgICAgICAgICAgICAgICAgICAgY2FzZSAzOiByZXR1cm4gWzIgLypyZXR1cm4qL107XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgIH07XG4gICAgcmV0dXJuIEJhc2VIZWxwZXI7XG59KCkpO1xuZXhwb3J0cy5CYXNlSGVscGVyID0gQmFzZUhlbHBlcjtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/Helpers/BaseHelper.ts\n");

/***/ }),

/***/ "./src/Helpers/ButtonFormHelper.ts":
/*!*****************************************!*\
  !*** ./src/Helpers/ButtonFormHelper.ts ***!
  \*****************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === \"function\" ? Iterator : Object).prototype);\n    return g.next = verb(0), g[\"throw\"] = verb(1), g[\"return\"] = verb(2), typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ButtonFormHelper = void 0;\nvar ButtonException_1 = __webpack_require__(/*! ../Exceptions/ButtonException */ \"./src/Exceptions/ButtonException.ts\");\nvar BaseHelper_1 = __webpack_require__(/*! ./BaseHelper */ \"./src/Helpers/BaseHelper.ts\"); // Adjust path as needed\n/**\n * ButtonFormHelper extends BaseHelper to provide form-specific functionality.\n * It accepts only a Xrm.FormContext as the context.\n */\nvar ButtonFormHelper = /** @class */ (function (_super) {\n    __extends(ButtonFormHelper, _super);\n    /**\n     * Constructs a new ButtonFormHelper instance with the provided FormContext.\n     *\n     * @param formContext - The Xrm.FormContext representing the current form.\n     */\n    function ButtonFormHelper(formContext) {\n        var _this = _super.call(this) || this;\n        // Set the context and container type using the BaseHelper's method.\n        _this.getButtonLocation(formContext);\n        return _this;\n    }\n    /**\n     * Static factory method to create and initialize a ButtonFormHelper instance.\n     *\n     * @param formContext - The Xrm.FormContext representing the current form.\n     * @param buttonSettingName - The name of the button setting to retrieve.\n     * @returns A Promise that resolves to an initialized ButtonFormHelper instance.\n     */\n    ButtonFormHelper.create = function (formContext, buttonSettingName) {\n        return __awaiter(this, void 0, void 0, function () {\n            var helper;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        helper = new ButtonFormHelper(formContext);\n                        return [4 /*yield*/, helper.initializeSettings(buttonSettingName)];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/, helper];\n                }\n            });\n        });\n    };\n    /**\n     * Retrieves the entity logical name from the current form context.\n     *\n     * @returns The entity logical name.\n     * @throws Error if the form context is not set.\n     */\n    ButtonFormHelper.prototype.getEntityLogicalName = function () {\n        if (!this.formContext) {\n            throw new Error(\"Form context is not set.\");\n        }\n        return this.formContext.data.entity.getEntityName();\n    };\n    /**\n     * Retrieves the record ID from the current form context.\n     *\n     * @returns The record ID as a lowercase string without curly braces.\n     * @throws Error if the form context is not set.\n     */\n    ButtonFormHelper.prototype.getRecordId = function () {\n        if (!this.formContext) {\n            throw new Error(\"Form context is not set.\");\n        }\n        return this.formContext.data.entity.getId().replace(\"{\", \"\").replace(\"}\", \"\").toLowerCase();\n    };\n    /**\n     * Builds a payload based on the button setting configuration and form context.\n     *\n     * The payload may include the entity logical name, record ID, and user ID,\n     * according to the configuration flags in the button setting.\n     *\n     * @returns An object containing the payload data.\n     * @throws Error if the form context or button setting is not set.\n     */\n    ButtonFormHelper.prototype.getPayload = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var payload, _a;\n            var _b;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        if (!this.formContext || !this.buttonSetting) {\n                            throw new Error(\"Form context or button setting is not set.\");\n                        }\n                        payload = {};\n                        if (!this.buttonSetting.esp_includeentitylogicalnameinpayload) return [3 /*break*/, 2];\n                        payload = __assign(__assign({}, payload), { entityLogicalSingularName: this.getEntityLogicalName() });\n                        _a = [__assign({}, payload)];\n                        _b = {};\n                        return [4 /*yield*/, this.getEntityPluralName(this.getEntityLogicalName())];\n                    case 1:\n                        payload = __assign.apply(void 0, _a.concat([(_b.entityLogicalPluralName = _c.sent(), _b)]));\n                        _c.label = 2;\n                    case 2:\n                        if (this.buttonSetting.esp_includerecordidinpayload) {\n                            payload = __assign(__assign({}, payload), { recordId: this.getRecordId() });\n                        }\n                        if (this.buttonSetting.esp_includecallinguseridinpayload) {\n                            payload = __assign(__assign({}, payload), { userId: this.getUserID() });\n                        }\n                        return [2 /*return*/, payload];\n                }\n            });\n        });\n    };\n    /**\n     * Opens a confirmation dialog before executing the button action.\n     *\n     * @returns A Promise that resolves to true if the user confirms the dialog, false otherwise.\n     */\n    ButtonFormHelper.prototype.openConfirmationDialogBeforeRun = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var confirmStrings, result;\n            var _a, _b, _c, _d;\n            return __generator(this, function (_e) {\n                switch (_e.label) {\n                    case 0:\n                        if (!(!this.buttonAdvancedSetting || this.buttonAdvancedSetting.esp_confirmationdialogtext == null)) return [3 /*break*/, 2];\n                        return [4 /*yield*/, ButtonException_1.ExceptionLowCodeButton.displayGenericErrorNotification(\"Confirmation Dialog Text Error\", \"The confirmation dialog text is empty! Please fill it on your configuration settings.\")];\n                    case 1:\n                        _e.sent();\n                        return [2 /*return*/, false];\n                    case 2:\n                        confirmStrings = {\n                            cancelButtonLabel: (_a = this.buttonAdvancedSetting.esp_confirmationdialogcancellabel) !== null && _a !== void 0 ? _a : \"\",\n                            confirmButtonLabel: (_b = this.buttonAdvancedSetting.esp_confirmationdialogconfirmlabel) !== null && _b !== void 0 ? _b : \"\",\n                            subtitle: (_c = this.buttonAdvancedSetting.esp_confirmationdialogsubtitle) !== null && _c !== void 0 ? _c : \"\",\n                            text: (_d = this.buttonAdvancedSetting.esp_confirmationdialogtext) !== null && _d !== void 0 ? _d : \"\",\n                            title: this.buttonAdvancedSetting.esp_confirmationdialogtitle,\n                        };\n                        return [4 /*yield*/, Xrm.Navigation.openConfirmDialog(confirmStrings)];\n                    case 3:\n                        result = _e.sent();\n                        return [2 /*return*/, result.confirmed];\n                }\n            });\n        });\n    };\n    /**\n     * Opens a synchronous success dialog and awaits the user's confirmation.\n     *\n     * @returns A Promise that resolves to true if the success dialog is confirmed, or false otherwise.\n     */\n    ButtonFormHelper.prototype.openSuccessDialogSync = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var confirmStrings, result;\n            var _a, _b;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        if (!(!this.buttonAdvancedSetting || this.buttonAdvancedSetting.esp_syncconfirmationboxtext == null)) return [3 /*break*/, 2];\n                        return [4 /*yield*/, ButtonException_1.ExceptionLowCodeButton.displayGenericErrorNotification(\"Sync Confirmation Box Text Error\", \"The sync confirmation box text is empty! Please fill it on your configuration settings.\")];\n                    case 1:\n                        _c.sent();\n                        return [2 /*return*/, false];\n                    case 2:\n                        confirmStrings = {\n                            confirmButtonLabel: (_a = this.buttonAdvancedSetting.esp_syncconfirmationboxconfirmlabel) !== null && _a !== void 0 ? _a : undefined,\n                            text: (_b = this.buttonAdvancedSetting.esp_syncconfirmationboxtext) !== null && _b !== void 0 ? _b : undefined,\n                            title: this.buttonAdvancedSetting.esp_syncconfirmationboxtitle,\n                        };\n                        return [4 /*yield*/, Xrm.Navigation.openAlertDialog(confirmStrings)];\n                    case 3:\n                        result = _c.sent();\n                        return [2 /*return*/, result.confirmed];\n                }\n            });\n        });\n    };\n    /**\n     * Opens a success dialog that may redirect the user based on their confirmation.\n     * If the user confirms, the browser is redirected; otherwise, the form is reloaded.\n     *\n     * @param response - An object containing the redirect URI.\n     */\n    ButtonFormHelper.prototype.openSuccessDialogRedirect = function (response) {\n        var _this = this;\n        var _a, _b, _c, _d;\n        if (!this.buttonAdvancedSetting) {\n            throw new Error(\"Button advanced setting is not set.\");\n        }\n        if (this.buttonAdvancedSetting.esp_syncconfirmationboxredirecttext == null) {\n            ButtonException_1.ExceptionLowCodeButton.displayGenericErrorNotification(\"Sync Confirmation Box Redirect Text Error\", \"The sync confirmation box redirect text is empty! Please fill it on your configuration settings.\");\n            return;\n        }\n        var confirmStrings = {\n            cancelButtonLabel: (_a = this.buttonAdvancedSetting.esp_syncconfirmationboxredirectcancellabel) !== null && _a !== void 0 ? _a : undefined,\n            confirmButtonLabel: (_b = this.buttonAdvancedSetting.esp_syncconfirmationboxredirectconfirmlabel) !== null && _b !== void 0 ? _b : undefined,\n            text: this.buttonAdvancedSetting.esp_syncconfirmationboxredirecttext,\n            subtitle: (_c = this.buttonAdvancedSetting.esp_syncconfirmationboxredirectsubtitle) !== null && _c !== void 0 ? _c : undefined,\n            title: (_d = this.buttonAdvancedSetting.esp_syncconfirmationboxredirecttitle) !== null && _d !== void 0 ? _d : undefined,\n        };\n        Xrm.Navigation.openConfirmDialog(confirmStrings).then(function (result) {\n            if (result.confirmed) {\n                console.log(\"User confirmed the dialog, redirecting...\");\n                if (_this.buttonAdvancedSetting.esp_syncconfirmationboxredirectmode ===\n                    1 /* esp_buttonadvancedsetting_esp_buttonadvancedsetting_esp_syncconfirmationboxredirectmode.CurrentTab */) {\n                    window.open(response.redirectUri, \"_self\").focus();\n                }\n                else {\n                    window.open(response.redirectUri, \"_blank\").focus();\n                }\n            }\n            else {\n                console.log(\"User cancelled the dialog, refreshing the form.\");\n                _this.reloadForm();\n            }\n        });\n    };\n    /**\n     * Reloads the current form.\n     *\n     * @throws Error if the form context, button setting, or advanced setting is not set.\n     */\n    ButtonFormHelper.prototype.reloadForm = function () {\n        if (!this.formContext || !this.buttonSetting || !this.buttonAdvancedSetting) {\n            throw new Error(\"Required properties are not set for reloading the form.\");\n        }\n        if (this.buttonSetting.esp_refreshwhenapicallends &&\n            !(this.buttonAdvancedSetting.esp_syncconfirmationboxredirect &&\n                this.buttonAdvancedSetting.esp_syncconfirmationboxredirectmode ===\n                    1 /* esp_buttonadvancedsetting_esp_buttonadvancedsetting_esp_syncconfirmationboxredirectmode.CurrentTab */)) {\n            this.formContext.data.refresh(false);\n        }\n    };\n    /**\n     * Displays an asynchronous form notification for 5 seconds.\n     *\n     * @returns A Promise that resolves when the notification is cleared.\n     */\n    ButtonFormHelper.prototype.asyncFormNotification = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!(!this.formContext ||\n                            !this.buttonAdvancedSetting ||\n                            this.buttonAdvancedSetting.esp_asyncformnotificationtext == null)) return [3 /*break*/, 2];\n                        return [4 /*yield*/, ButtonException_1.ExceptionLowCodeButton.displayGenericErrorNotification(\"Async Form Notification Text Error\", \"The async form notification text is empty! Please fill it on your configuration settings.\")];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                    case 2:\n                        this.formContext.ui.setFormNotification(this.buttonAdvancedSetting.esp_asyncformnotificationtext, \"INFO\", \"LowCodeButtonFormNotification\");\n                        setTimeout(function () {\n                            _this.formContext.ui.clearFormNotification(\"LowCodeButtonFormNotification\");\n                        }, 5000);\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Clears the form notification from the current form.\n     *\n     * @throws Error if the form context is not set.\n     */\n    ButtonFormHelper.prototype.clearFormNotification = function () {\n        if (!this.formContext) {\n            throw new Error(\"Form context is not set.\");\n        }\n        this.formContext.ui.clearFormNotification(\"LowCodeButtonFormNotification\");\n    };\n    /**\n     * Displays a synchronous form notification for 120 seconds.\n     *\n     * @returns A Promise that resolves when the notification is cleared.\n     */\n    ButtonFormHelper.prototype.syncFormNotification = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!(!this.formContext ||\n                            !this.buttonAdvancedSetting ||\n                            this.buttonAdvancedSetting.esp_syncformnotificationtext == null)) return [3 /*break*/, 2];\n                        return [4 /*yield*/, ButtonException_1.ExceptionLowCodeButton.displayGenericErrorNotification(\"Sync Form Notification Text Error\", \"The sync form notification text is empty! Please fill it on your configuration settings.\")];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                    case 2:\n                        this.formContext.ui.setFormNotification(this.buttonAdvancedSetting.esp_syncformnotificationtext, \"INFO\", \"LowCodeButtonFormNotification\");\n                        setTimeout(function () {\n                            _this.formContext.ui.clearFormNotification(\"LowCodeButtonFormNotification\");\n                        }, 120000);\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Displays a success form notification for 5 seconds.\n     *\n     * @returns A Promise that resolves when the notification is cleared.\n     */\n    ButtonFormHelper.prototype.showSuccessFormNotification = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!(!this.formContext ||\n                            !this.buttonAdvancedSetting ||\n                            this.buttonAdvancedSetting.esp_syncsuccessformnotificationtext == null)) return [3 /*break*/, 2];\n                        return [4 /*yield*/, ButtonException_1.ExceptionLowCodeButton.displayGenericErrorNotification(\"Success Notification Text Error\", \"The success notification text is empty! Please fill it on your configuration settings.\\nField: esp_syncsuccessformnotificationtext\")];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                    case 2:\n                        this.formContext.ui.setFormNotification(this.buttonAdvancedSetting.esp_syncsuccessformnotificationtext, \"INFO\", \"LowCodeButtonFormNotification\");\n                        setTimeout(function () {\n                            _this.formContext.ui.clearFormNotification(\"LowCodeButtonFormNotification\");\n                        }, 5000);\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Clears all synchronous notifications including form notifications and progress indicators.\n     */\n    ButtonFormHelper.prototype.clearSyncNotifications = function () {\n        var _a, _b;\n        if ((_a = this.buttonAdvancedSetting) === null || _a === void 0 ? void 0 : _a.esp_syncformnotification) {\n            this.clearFormNotification();\n        }\n        if ((_b = this.buttonAdvancedSetting) === null || _b === void 0 ? void 0 : _b.esp_syncspinner) {\n            Xrm.Utility.closeProgressIndicator();\n        }\n    };\n    return ButtonFormHelper;\n}(BaseHelper_1.BaseHelper));\nexports.ButtonFormHelper = ButtonFormHelper;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/Helpers/ButtonFormHelper.ts\n");

/***/ }),

/***/ "./src/LowCodeButtonFormBase.ts":
/*!**************************************!*\
  !*** ./src/LowCodeButtonFormBase.ts ***!
  \**************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === \"function\" ? Iterator : Object).prototype);\n    return g.next = verb(0), g[\"throw\"] = verb(1), g[\"return\"] = verb(2), typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ButtonRegistrationForm = void 0;\nvar ButtonException_1 = __webpack_require__(/*! ./Exceptions/ButtonException */ \"./src/Exceptions/ButtonException.ts\");\nvar ButtonFormHelper_1 = __webpack_require__(/*! ./Helpers/ButtonFormHelper */ \"./src/Helpers/ButtonFormHelper.ts\");\nvar BaseButtonResponseModels_1 = __webpack_require__(/*! ./Models/BaseButtonResponseModels */ \"./src/Models/BaseButtonResponseModels.ts\");\nvar ButtonRegistrationForm = /** @class */ (function () {\n    function ButtonRegistrationForm() {\n    }\n    /**\n     * Handles the onClick event for the button inside a Form.\n     * @param formContext - The form context.\n     * @param buttonSettingName - The name of the button setting.\n     */\n    ButtonRegistrationForm.onClick = function (formContext, buttonSettingName) {\n        return __awaiter(this, void 0, void 0, function () {\n            var buttonHelper, confirmation;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        buttonHelper = new ButtonFormHelper_1.ButtonFormHelper(formContext);\n                        return [4 /*yield*/, buttonHelper.initializeSettings(buttonSettingName)];\n                    case 1:\n                        _a.sent();\n                        if (!buttonHelper.buttonAdvancedSetting.esp_showconfirmationdialog) return [3 /*break*/, 3];\n                        return [4 /*yield*/, buttonHelper.openConfirmationDialogBeforeRun()];\n                    case 2:\n                        confirmation = _a.sent();\n                        if (!confirmation) {\n                            return [2 /*return*/];\n                        }\n                        _a.label = 3;\n                    case 3:\n                        if (!(formContext.data.entity.getIsDirty() && buttonHelper.buttonSetting.esp_savebeforerunning)) return [3 /*break*/, 5];\n                        console.log(\"Saving form before running the button\");\n                        return [4 /*yield*/, formContext.data.save()];\n                    case 4:\n                        _a.sent();\n                        _a.label = 5;\n                    case 5:\n                        if (!!buttonHelper.buttonSetting.esp_endpoint) return [3 /*break*/, 7];\n                        return [4 /*yield*/, ButtonException_1.ExceptionLowCodeButton.displayGenericErrorNotification(\"Endpoint Not Set\", \"The endpoint for the button is not set. Please set it up in the button settings.\")];\n                    case 6:\n                        _a.sent();\n                        return [2 /*return*/];\n                    case 7:\n                        if (!(buttonHelper.buttonAdvancedSetting.esp_executionmode ===\n                            1 /* esp_buttonadvancedsetting_esp_buttonadvancedsetting_esp_executionmode.Async */)) return [3 /*break*/, 9];\n                        return [4 /*yield*/, this.executeAsync(buttonHelper)];\n                    case 8:\n                        _a.sent();\n                        return [3 /*break*/, 11];\n                    case 9: return [4 /*yield*/, this.executeSync(buttonHelper)];\n                    case 10:\n                        _a.sent();\n                        _a.label = 11;\n                    case 11: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Executes an asynchronous HTTP call.\n     * @param buttonHelper - The initialized ButtonFormHelper instance.\n     */\n    ButtonRegistrationForm.executeAsync = function (buttonHelper) {\n        return __awaiter(this, void 0, void 0, function () {\n            var buttonSetting, buttonAdvancedSetting, _a, _b, _c;\n            var _this = this;\n            return __generator(this, function (_d) {\n                switch (_d.label) {\n                    case 0:\n                        buttonSetting = buttonHelper.buttonSetting, buttonAdvancedSetting = buttonHelper.buttonAdvancedSetting;\n                        console.log(\"Executing async call to \".concat(buttonSetting === null || buttonSetting === void 0 ? void 0 : buttonSetting.esp_endpoint));\n                        if (buttonAdvancedSetting === null || buttonAdvancedSetting === void 0 ? void 0 : buttonAdvancedSetting.esp_asyncformnotification) {\n                            void buttonHelper.asyncFormNotification();\n                        }\n                        _b = (_a = buttonHelper)\n                            .makeRequest;\n                        _c = [\"POST\", buttonSetting.esp_endpoint];\n                        return [4 /*yield*/, buttonHelper.getPayload()];\n                    case 1:\n                        _b.apply(_a, _c.concat([_d.sent()]))\n                            .catch(function (error) { return __awaiter(_this, void 0, void 0, function () {\n                            return __generator(this, function (_a) {\n                                switch (_a.label) {\n                                    case 0: return [4 /*yield*/, ButtonException_1.ExceptionLowCodeButton.displayGenericErrorNotification(\"Error during HTTP Call\", error.message)];\n                                    case 1:\n                                        _a.sent();\n                                        return [4 /*yield*/, buttonHelper.clearFormNotification()];\n                                    case 2:\n                                        _a.sent();\n                                        return [2 /*return*/];\n                                }\n                            });\n                        }); });\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Executes a synchronous HTTP call.\n     * @param buttonHelper - The initialized ButtonFormHelper instance.\n     */\n    ButtonRegistrationForm.executeSync = function (buttonHelper) {\n        return __awaiter(this, void 0, void 0, function () {\n            var buttonSetting, buttonAdvancedSetting, response, _a, _b, _c, errorMessage, _d, _e, errorText, redirectResponse, _f, _g;\n            var _this = this;\n            var _h, _j;\n            return __generator(this, function (_k) {\n                switch (_k.label) {\n                    case 0:\n                        buttonSetting = buttonHelper.buttonSetting, buttonAdvancedSetting = buttonHelper.buttonAdvancedSetting;\n                        console.log(\"Executing sync call to \".concat(buttonSetting === null || buttonSetting === void 0 ? void 0 : buttonSetting.esp_endpoint));\n                        if (!(buttonAdvancedSetting === null || buttonAdvancedSetting === void 0 ? void 0 : buttonAdvancedSetting.esp_syncformnotification)) return [3 /*break*/, 2];\n                        return [4 /*yield*/, buttonHelper.syncFormNotification()];\n                    case 1:\n                        _k.sent();\n                        _k.label = 2;\n                    case 2:\n                        if (!(buttonAdvancedSetting === null || buttonAdvancedSetting === void 0 ? void 0 : buttonAdvancedSetting.esp_syncspinner)) return [3 /*break*/, 5];\n                        if (!!buttonAdvancedSetting.esp_syncspinnertext) return [3 /*break*/, 4];\n                        return [4 /*yield*/, ButtonException_1.ExceptionLowCodeButton.displayGenericErrorNotification(\"Sync Spinner Text Error\", \"The sync spinner text is empty! Please fill it on your configuration settings.\")];\n                    case 3:\n                        _k.sent();\n                        return [2 /*return*/];\n                    case 4:\n                        Xrm.Utility.showProgressIndicator(buttonAdvancedSetting.esp_syncspinnertext);\n                        _k.label = 5;\n                    case 5:\n                        _b = (_a = buttonHelper)\n                            .makeRequest;\n                        _c = [\"POST\", buttonSetting.esp_endpoint];\n                        return [4 /*yield*/, buttonHelper.getPayload()];\n                    case 6: return [4 /*yield*/, _b.apply(_a, _c.concat([_k.sent()]))\n                            .catch(function (error) { return __awaiter(_this, void 0, void 0, function () {\n                            return __generator(this, function (_a) {\n                                switch (_a.label) {\n                                    case 0: return [4 /*yield*/, ButtonException_1.ExceptionLowCodeButton.displayGenericErrorNotification(\"Error during HTTP Call\", error.message)];\n                                    case 1:\n                                        _a.sent();\n                                        return [2 /*return*/];\n                                }\n                            });\n                        }); })\n                            .finally(function () {\n                            if (buttonAdvancedSetting === null || buttonAdvancedSetting === void 0 ? void 0 : buttonAdvancedSetting.esp_syncspinner) {\n                                Xrm.Utility.closeProgressIndicator();\n                                buttonHelper.clearFormNotification();\n                            }\n                        })];\n                    case 7:\n                        response = _k.sent();\n                        if (!response)\n                            return [2 /*return*/];\n                        if (!(response.status === 400)) return [3 /*break*/, 10];\n                        buttonHelper.clearSyncNotifications();\n                        _e = (_d = BaseButtonResponseModels_1.ErrorMessageResponse).fromJson;\n                        return [4 /*yield*/, response.text()];\n                    case 8:\n                        errorMessage = _e.apply(_d, [_k.sent()]);\n                        return [4 /*yield*/, ButtonException_1.ExceptionLowCodeButton.displayGenericErrorNotification(errorMessage.title, errorMessage.message)];\n                    case 9:\n                        _k.sent();\n                        return [2 /*return*/];\n                    case 10:\n                        if (!(((_h = response.status) !== null && _h !== void 0 ? _h : 500) >= 500)) return [3 /*break*/, 13];\n                        buttonHelper.clearSyncNotifications();\n                        return [4 /*yield*/, response.text()];\n                    case 11:\n                        errorText = (_j = (_k.sent())) !== null && _j !== void 0 ? _j : \"An error occurred on the server. Please try again later.\";\n                        return [4 /*yield*/, ButtonException_1.ExceptionLowCodeButton.displayGenericErrorNotification(\"Error during HTTP Call\", \"Error code: \".concat(response.status, \"\\n\").concat(errorText))];\n                    case 12:\n                        _k.sent();\n                        return [2 /*return*/];\n                    case 13:\n                        if (!(response.status === 200)) return [3 /*break*/, 20];\n                        buttonHelper.clearSyncNotifications();\n                        if (!(buttonAdvancedSetting === null || buttonAdvancedSetting === void 0 ? void 0 : buttonAdvancedSetting.esp_syncsuccessformnotification)) return [3 /*break*/, 15];\n                        return [4 /*yield*/, buttonHelper.showSuccessFormNotification()];\n                    case 14:\n                        _k.sent();\n                        _k.label = 15;\n                    case 15:\n                        if (!((buttonAdvancedSetting === null || buttonAdvancedSetting === void 0 ? void 0 : buttonAdvancedSetting.esp_syncconfirmationboxtype) ===\n                            0 /* esp_buttonadvancedsetting_esp_buttonadvancedsetting_esp_syncconfirmationboxtype.Default */)) return [3 /*break*/, 17];\n                        return [4 /*yield*/, buttonHelper.openSuccessDialogSync()];\n                    case 16:\n                        _k.sent();\n                        _k.label = 17;\n                    case 17:\n                        if (!((buttonAdvancedSetting === null || buttonAdvancedSetting === void 0 ? void 0 : buttonAdvancedSetting.esp_syncconfirmationboxtype) ===\n                            1 /* esp_buttonadvancedsetting_esp_buttonadvancedsetting_esp_syncconfirmationboxtype.Redirect */)) return [3 /*break*/, 19];\n                        _g = (_f = BaseButtonResponseModels_1.RedirectResponse).fromJson;\n                        return [4 /*yield*/, response.text()];\n                    case 18:\n                        redirectResponse = _g.apply(_f, [_k.sent()]);\n                        buttonHelper.openSuccessDialogRedirect(redirectResponse);\n                        _k.label = 19;\n                    case 19:\n                        buttonHelper.reloadForm();\n                        _k.label = 20;\n                    case 20: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    return ButtonRegistrationForm;\n}());\nexports.ButtonRegistrationForm = ButtonRegistrationForm;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/LowCodeButtonFormBase.ts\n");

/***/ }),

/***/ "./src/Models/BaseButtonResponseModels.ts":
/*!************************************************!*\
  !*** ./src/Models/BaseButtonResponseModels.ts ***!
  \************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ErrorMessageResponse = exports.RedirectResponse = void 0;\nvar ButtonException_1 = __webpack_require__(/*! ../Exceptions/ButtonException */ \"./src/Exceptions/ButtonException.ts\");\n/**\n * RedirectResponse encapsulates a redirect URI.\n */\nvar RedirectResponse = /** @class */ (function () {\n    /**\n     * Creates a new instance of RedirectResponse.\n     * @param redirectUri - The URI to which the user should be redirected.\n     */\n    function RedirectResponse(redirectUri) {\n        this.redirectUri = redirectUri;\n    }\n    /**\n     * Parses a JSON string to create a RedirectResponse instance.\n     * Expects the JSON to contain a \"redirectUri\" property of type string.\n     * If the property is missing or invalid, displays a generic error notification\n     * and throws an error.\n     *\n     * @param json - The JSON string to parse.\n     * @returns A new RedirectResponse instance.\n     * @throws Error if the JSON format is invalid or \"redirectUri\" is not a string.\n     */\n    RedirectResponse.fromJson = function (json) {\n        var data = JSON.parse(json);\n        if (typeof data.redirectUri !== \"string\") {\n            ButtonException_1.ExceptionLowCodeButton.displayGenericErrorNotification(\"Redirect URI Not Found\", \"The redirect URI was not found in the response.\");\n            throw new Error(\"Invalid JSON format for RedirectResponse\");\n        }\n        return new RedirectResponse(data.redirectUri);\n    };\n    return RedirectResponse;\n}());\nexports.RedirectResponse = RedirectResponse;\n/**\n * ErrorMessageResponse encapsulates an error message along with an optional title.\n */\nvar ErrorMessageResponse = /** @class */ (function () {\n    /**\n     * Creates a new instance of ErrorMessageResponse.\n     * @param message - The error message.\n     * @param title - An optional title for the error.\n     */\n    function ErrorMessageResponse(message, title) {\n        this.message = message;\n        this.title = title;\n    }\n    /**\n     * Parses a JSON string to create an ErrorMessageResponse instance.\n     * Expects the JSON to contain a \"message\" property of type string.\n     * If the property is missing or invalid, displays a generic error notification\n     * and throws an error.\n     *\n     * @param json - The JSON string to parse.\n     * @returns A new ErrorMessageResponse instance.\n     * @throws Error if the JSON format is invalid or \"message\" is not a string.\n     */\n    ErrorMessageResponse.fromJson = function (json) {\n        var _a;\n        var data = JSON.parse(json);\n        console.log(\"Error message data\", data);\n        if (typeof data.message !== \"string\") {\n            ButtonException_1.ExceptionLowCodeButton.displayGenericErrorNotification(\"Error Message Not Found\", \"The error message was not found in the response.\");\n            throw new Error(\"Invalid JSON format for ErrorMessage\");\n        }\n        return new ErrorMessageResponse(data.message, (_a = data.title) !== null && _a !== void 0 ? _a : \"\");\n    };\n    return ErrorMessageResponse;\n}());\nexports.ErrorMessageResponse = ErrorMessageResponse;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvTW9kZWxzL0Jhc2VCdXR0b25SZXNwb25zZU1vZGVscy50cyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCw0QkFBNEIsR0FBRyx3QkFBd0I7QUFDdkQsd0JBQXdCLG1CQUFPLENBQUMsMEVBQStCO0FBQy9EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCx3QkFBd0I7QUFDeEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0QsNEJBQTRCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vTENCLy4vc3JjL01vZGVscy9CYXNlQnV0dG9uUmVzcG9uc2VNb2RlbHMudHM/YTU3MiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuRXJyb3JNZXNzYWdlUmVzcG9uc2UgPSBleHBvcnRzLlJlZGlyZWN0UmVzcG9uc2UgPSB2b2lkIDA7XG52YXIgQnV0dG9uRXhjZXB0aW9uXzEgPSByZXF1aXJlKFwiLi4vRXhjZXB0aW9ucy9CdXR0b25FeGNlcHRpb25cIik7XG4vKipcbiAqIFJlZGlyZWN0UmVzcG9uc2UgZW5jYXBzdWxhdGVzIGEgcmVkaXJlY3QgVVJJLlxuICovXG52YXIgUmVkaXJlY3RSZXNwb25zZSA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICAvKipcbiAgICAgKiBDcmVhdGVzIGEgbmV3IGluc3RhbmNlIG9mIFJlZGlyZWN0UmVzcG9uc2UuXG4gICAgICogQHBhcmFtIHJlZGlyZWN0VXJpIC0gVGhlIFVSSSB0byB3aGljaCB0aGUgdXNlciBzaG91bGQgYmUgcmVkaXJlY3RlZC5cbiAgICAgKi9cbiAgICBmdW5jdGlvbiBSZWRpcmVjdFJlc3BvbnNlKHJlZGlyZWN0VXJpKSB7XG4gICAgICAgIHRoaXMucmVkaXJlY3RVcmkgPSByZWRpcmVjdFVyaTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUGFyc2VzIGEgSlNPTiBzdHJpbmcgdG8gY3JlYXRlIGEgUmVkaXJlY3RSZXNwb25zZSBpbnN0YW5jZS5cbiAgICAgKiBFeHBlY3RzIHRoZSBKU09OIHRvIGNvbnRhaW4gYSBcInJlZGlyZWN0VXJpXCIgcHJvcGVydHkgb2YgdHlwZSBzdHJpbmcuXG4gICAgICogSWYgdGhlIHByb3BlcnR5IGlzIG1pc3Npbmcgb3IgaW52YWxpZCwgZGlzcGxheXMgYSBnZW5lcmljIGVycm9yIG5vdGlmaWNhdGlvblxuICAgICAqIGFuZCB0aHJvd3MgYW4gZXJyb3IuXG4gICAgICpcbiAgICAgKiBAcGFyYW0ganNvbiAtIFRoZSBKU09OIHN0cmluZyB0byBwYXJzZS5cbiAgICAgKiBAcmV0dXJucyBBIG5ldyBSZWRpcmVjdFJlc3BvbnNlIGluc3RhbmNlLlxuICAgICAqIEB0aHJvd3MgRXJyb3IgaWYgdGhlIEpTT04gZm9ybWF0IGlzIGludmFsaWQgb3IgXCJyZWRpcmVjdFVyaVwiIGlzIG5vdCBhIHN0cmluZy5cbiAgICAgKi9cbiAgICBSZWRpcmVjdFJlc3BvbnNlLmZyb21Kc29uID0gZnVuY3Rpb24gKGpzb24pIHtcbiAgICAgICAgdmFyIGRhdGEgPSBKU09OLnBhcnNlKGpzb24pO1xuICAgICAgICBpZiAodHlwZW9mIGRhdGEucmVkaXJlY3RVcmkgIT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgICAgIEJ1dHRvbkV4Y2VwdGlvbl8xLkV4Y2VwdGlvbkxvd0NvZGVCdXR0b24uZGlzcGxheUdlbmVyaWNFcnJvck5vdGlmaWNhdGlvbihcIlJlZGlyZWN0IFVSSSBOb3QgRm91bmRcIiwgXCJUaGUgcmVkaXJlY3QgVVJJIHdhcyBub3QgZm91bmQgaW4gdGhlIHJlc3BvbnNlLlwiKTtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIkludmFsaWQgSlNPTiBmb3JtYXQgZm9yIFJlZGlyZWN0UmVzcG9uc2VcIik7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG5ldyBSZWRpcmVjdFJlc3BvbnNlKGRhdGEucmVkaXJlY3RVcmkpO1xuICAgIH07XG4gICAgcmV0dXJuIFJlZGlyZWN0UmVzcG9uc2U7XG59KCkpO1xuZXhwb3J0cy5SZWRpcmVjdFJlc3BvbnNlID0gUmVkaXJlY3RSZXNwb25zZTtcbi8qKlxuICogRXJyb3JNZXNzYWdlUmVzcG9uc2UgZW5jYXBzdWxhdGVzIGFuIGVycm9yIG1lc3NhZ2UgYWxvbmcgd2l0aCBhbiBvcHRpb25hbCB0aXRsZS5cbiAqL1xudmFyIEVycm9yTWVzc2FnZVJlc3BvbnNlID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIC8qKlxuICAgICAqIENyZWF0ZXMgYSBuZXcgaW5zdGFuY2Ugb2YgRXJyb3JNZXNzYWdlUmVzcG9uc2UuXG4gICAgICogQHBhcmFtIG1lc3NhZ2UgLSBUaGUgZXJyb3IgbWVzc2FnZS5cbiAgICAgKiBAcGFyYW0gdGl0bGUgLSBBbiBvcHRpb25hbCB0aXRsZSBmb3IgdGhlIGVycm9yLlxuICAgICAqL1xuICAgIGZ1bmN0aW9uIEVycm9yTWVzc2FnZVJlc3BvbnNlKG1lc3NhZ2UsIHRpdGxlKSB7XG4gICAgICAgIHRoaXMubWVzc2FnZSA9IG1lc3NhZ2U7XG4gICAgICAgIHRoaXMudGl0bGUgPSB0aXRsZTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUGFyc2VzIGEgSlNPTiBzdHJpbmcgdG8gY3JlYXRlIGFuIEVycm9yTWVzc2FnZVJlc3BvbnNlIGluc3RhbmNlLlxuICAgICAqIEV4cGVjdHMgdGhlIEpTT04gdG8gY29udGFpbiBhIFwibWVzc2FnZVwiIHByb3BlcnR5IG9mIHR5cGUgc3RyaW5nLlxuICAgICAqIElmIHRoZSBwcm9wZXJ0eSBpcyBtaXNzaW5nIG9yIGludmFsaWQsIGRpc3BsYXlzIGEgZ2VuZXJpYyBlcnJvciBub3RpZmljYXRpb25cbiAgICAgKiBhbmQgdGhyb3dzIGFuIGVycm9yLlxuICAgICAqXG4gICAgICogQHBhcmFtIGpzb24gLSBUaGUgSlNPTiBzdHJpbmcgdG8gcGFyc2UuXG4gICAgICogQHJldHVybnMgQSBuZXcgRXJyb3JNZXNzYWdlUmVzcG9uc2UgaW5zdGFuY2UuXG4gICAgICogQHRocm93cyBFcnJvciBpZiB0aGUgSlNPTiBmb3JtYXQgaXMgaW52YWxpZCBvciBcIm1lc3NhZ2VcIiBpcyBub3QgYSBzdHJpbmcuXG4gICAgICovXG4gICAgRXJyb3JNZXNzYWdlUmVzcG9uc2UuZnJvbUpzb24gPSBmdW5jdGlvbiAoanNvbikge1xuICAgICAgICB2YXIgX2E7XG4gICAgICAgIHZhciBkYXRhID0gSlNPTi5wYXJzZShqc29uKTtcbiAgICAgICAgY29uc29sZS5sb2coXCJFcnJvciBtZXNzYWdlIGRhdGFcIiwgZGF0YSk7XG4gICAgICAgIGlmICh0eXBlb2YgZGF0YS5tZXNzYWdlICE9PSBcInN0cmluZ1wiKSB7XG4gICAgICAgICAgICBCdXR0b25FeGNlcHRpb25fMS5FeGNlcHRpb25Mb3dDb2RlQnV0dG9uLmRpc3BsYXlHZW5lcmljRXJyb3JOb3RpZmljYXRpb24oXCJFcnJvciBNZXNzYWdlIE5vdCBGb3VuZFwiLCBcIlRoZSBlcnJvciBtZXNzYWdlIHdhcyBub3QgZm91bmQgaW4gdGhlIHJlc3BvbnNlLlwiKTtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIkludmFsaWQgSlNPTiBmb3JtYXQgZm9yIEVycm9yTWVzc2FnZVwiKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbmV3IEVycm9yTWVzc2FnZVJlc3BvbnNlKGRhdGEubWVzc2FnZSwgKF9hID0gZGF0YS50aXRsZSkgIT09IG51bGwgJiYgX2EgIT09IHZvaWQgMCA/IF9hIDogXCJcIik7XG4gICAgfTtcbiAgICByZXR1cm4gRXJyb3JNZXNzYWdlUmVzcG9uc2U7XG59KCkpO1xuZXhwb3J0cy5FcnJvck1lc3NhZ2VSZXNwb25zZSA9IEVycm9yTWVzc2FnZVJlc3BvbnNlO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/Models/BaseButtonResponseModels.ts\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module is referenced by other modules so it can't be inlined
/******/ 	var __webpack_exports__ = __webpack_require__("./src/LowCodeButtonFormBase.ts");
/******/ 	LCB = __webpack_exports__;
/******/ 	
/******/ })()
;